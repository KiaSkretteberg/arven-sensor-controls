
ArvenSensorControls.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00001478  0000150c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001478  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800122  00800122  0000152e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000152e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000158c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000015cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001472  00000000  00000000  0000175c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bba  00000000  00000000  00002bce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e45  00000000  00000000  00003788  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000518  00000000  00000000  000045d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a02  00000000  00000000  00004ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a28  00000000  00000000  000054ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005f12  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__ctors_end>
       4:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
       8:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
       c:	0c 94 a0 04 	jmp	0x940	; 0x940 <__vector_3>
      10:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      14:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__vector_5>
      18:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      1c:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      20:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      24:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      28:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      2c:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_11>
      30:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      34:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      38:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      3c:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      40:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      44:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      48:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      4c:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      50:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      54:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      58:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      5c:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      60:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      64:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__bad_interrupt>
      68:	1c 01       	movw	r2, r24
      6a:	26 01       	movw	r4, r12
      6c:	30 01       	movw	r6, r0
      6e:	3a 01       	movw	r6, r20
      70:	44 01       	movw	r8, r8
      72:	4e 01       	movw	r8, r28
      74:	58 01       	movw	r10, r16
      76:	62 01       	movw	r12, r4

00000078 <__trampolines_end>:
      78:	6e 61       	ori	r22, 0x1E	; 30
      7a:	6e 00       	.word	0x006e	; ????

0000007c <__c.2332>:
      7c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      8c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      9c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ac:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      bc:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      cc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      dc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      ec:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      fc:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     10c:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     11c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     12c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     13c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     14c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     15c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     16c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000017a <__ctors_end>:
     17a:	11 24       	eor	r1, r1
     17c:	1f be       	out	0x3f, r1	; 63
     17e:	cf ef       	ldi	r28, 0xFF	; 255
     180:	d8 e0       	ldi	r29, 0x08	; 8
     182:	de bf       	out	0x3e, r29	; 62
     184:	cd bf       	out	0x3d, r28	; 61

00000186 <__do_copy_data>:
     186:	11 e0       	ldi	r17, 0x01	; 1
     188:	a0 e0       	ldi	r26, 0x00	; 0
     18a:	b1 e0       	ldi	r27, 0x01	; 1
     18c:	e8 e7       	ldi	r30, 0x78	; 120
     18e:	f4 e1       	ldi	r31, 0x14	; 20
     190:	02 c0       	rjmp	.+4      	; 0x196 <__do_copy_data+0x10>
     192:	05 90       	lpm	r0, Z+
     194:	0d 92       	st	X+, r0
     196:	a2 32       	cpi	r26, 0x22	; 34
     198:	b1 07       	cpc	r27, r17
     19a:	d9 f7       	brne	.-10     	; 0x192 <__do_copy_data+0xc>

0000019c <__do_clear_bss>:
     19c:	21 e0       	ldi	r18, 0x01	; 1
     19e:	a2 e2       	ldi	r26, 0x22	; 34
     1a0:	b1 e0       	ldi	r27, 0x01	; 1
     1a2:	01 c0       	rjmp	.+2      	; 0x1a6 <.do_clear_bss_start>

000001a4 <.do_clear_bss_loop>:
     1a4:	1d 92       	st	X+, r1

000001a6 <.do_clear_bss_start>:
     1a6:	a2 33       	cpi	r26, 0x32	; 50
     1a8:	b2 07       	cpc	r27, r18
     1aa:	e1 f7       	brne	.-8      	; 0x1a4 <.do_clear_bss_loop>
     1ac:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <main>
     1b0:	0c 94 3a 0a 	jmp	0x1474	; 0x1474 <_exit>

000001b4 <__bad_interrupt>:
     1b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b8 <AtoD_Init>:
#include <avr/io.h>
#include <stdio.h>
#include "atd.h"

void AtoD_Init (AtoD_Channel chan)
{
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	1f 92       	push	r1
     1be:	cd b7       	in	r28, 0x3d	; 61
     1c0:	de b7       	in	r29, 0x3e	; 62
     1c2:	89 83       	std	Y+1, r24	; 0x01
  PRR &= ~(1 << PRADC); // turn on A/D module in power reduction register
     1c4:	84 e6       	ldi	r24, 0x64	; 100
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	24 e6       	ldi	r18, 0x64	; 100
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	f9 01       	movw	r30, r18
     1ce:	20 81       	ld	r18, Z
     1d0:	2e 7f       	andi	r18, 0xFE	; 254
     1d2:	fc 01       	movw	r30, r24
     1d4:	20 83       	st	Z, r18
  
  ADMUX = 0b00000000;   // Internal Vref off, right-aligned, ADC0 (28.9.1)  
     1d6:	8c e7       	ldi	r24, 0x7C	; 124
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	fc 01       	movw	r30, r24
     1dc:	10 82       	st	Z, r1
  ADCSRB = 0b00000000;  // default, no comparator, free running mode    
     1de:	8b e7       	ldi	r24, 0x7B	; 123
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	fc 01       	movw	r30, r24
     1e4:	10 82       	st	Z, r1
  
  // use support function to set channel
  AtoD_SetChannel(chan);
     1e6:	89 81       	ldd	r24, Y+1	; 0x01
     1e8:	0e 94 00 01 	call	0x200	; 0x200 <AtoD_SetChannel>
  
  ADCSRA = 0b11100111;  // turn on AD, prescale 128, ADATE needs to be on? (28.9.2)
     1ec:	8a e7       	ldi	r24, 0x7A	; 122
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	27 ee       	ldi	r18, 0xE7	; 231
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18
}
     1f6:	00 00       	nop
     1f8:	0f 90       	pop	r0
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <AtoD_SetChannel>:

void AtoD_SetChannel (AtoD_Channel chan)
{
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	1f 92       	push	r1
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
     20a:	89 83       	std	Y+1, r24	; 0x01
  switch (chan) 
     20c:	89 81       	ldd	r24, Y+1	; 0x01
     20e:	88 2f       	mov	r24, r24
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	09 2e       	mov	r0, r25
     214:	00 0c       	add	r0, r0
     216:	aa 0b       	sbc	r26, r26
     218:	bb 0b       	sbc	r27, r27
     21a:	40 e0       	ldi	r20, 0x00	; 0
     21c:	50 e0       	ldi	r21, 0x00	; 0
     21e:	27 e0       	ldi	r18, 0x07	; 7
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	84 1b       	sub	r24, r20
     224:	95 0b       	sbc	r25, r21
     226:	28 17       	cp	r18, r24
     228:	39 07       	cpc	r19, r25
     22a:	08 f4       	brcc	.+2      	; 0x22e <AtoD_SetChannel+0x2e>
     22c:	55 c0       	rjmp	.+170    	; 0x2d8 <AtoD_SetChannel+0xd8>
     22e:	8c 5c       	subi	r24, 0xCC	; 204
     230:	9f 4f       	sbci	r25, 0xFF	; 255
     232:	fc 01       	movw	r30, r24
     234:	0c 94 6c 08 	jmp	0x10d8	; 0x10d8 <__tablejump2__>
  {
    case AtoD_Channel_0:
      DIDR0 |= 0b00000001;  // kill digital input for channel 0
     238:	8e e7       	ldi	r24, 0x7E	; 126
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	2e e7       	ldi	r18, 0x7E	; 126
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	f9 01       	movw	r30, r18
     242:	20 81       	ld	r18, Z
     244:	21 60       	ori	r18, 0x01	; 1
     246:	fc 01       	movw	r30, r24
     248:	20 83       	st	Z, r18
      break;
     24a:	4a c0       	rjmp	.+148    	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_1:
      DIDR0 |= 0b00000010;  // kill digital input for channel 0
     24c:	8e e7       	ldi	r24, 0x7E	; 126
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	2e e7       	ldi	r18, 0x7E	; 126
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	f9 01       	movw	r30, r18
     256:	20 81       	ld	r18, Z
     258:	22 60       	ori	r18, 0x02	; 2
     25a:	fc 01       	movw	r30, r24
     25c:	20 83       	st	Z, r18
      break;
     25e:	40 c0       	rjmp	.+128    	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_2:
      DIDR0 |= 0b00000100;  // kill digital input for channel 0
     260:	8e e7       	ldi	r24, 0x7E	; 126
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	2e e7       	ldi	r18, 0x7E	; 126
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	f9 01       	movw	r30, r18
     26a:	20 81       	ld	r18, Z
     26c:	24 60       	ori	r18, 0x04	; 4
     26e:	fc 01       	movw	r30, r24
     270:	20 83       	st	Z, r18
      break;
     272:	36 c0       	rjmp	.+108    	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_3:
      DIDR0 |= 0b00001000;  // kill digital input for channel 0
     274:	8e e7       	ldi	r24, 0x7E	; 126
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	2e e7       	ldi	r18, 0x7E	; 126
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	f9 01       	movw	r30, r18
     27e:	20 81       	ld	r18, Z
     280:	28 60       	ori	r18, 0x08	; 8
     282:	fc 01       	movw	r30, r24
     284:	20 83       	st	Z, r18
      break;
     286:	2c c0       	rjmp	.+88     	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_4:
      DIDR0 |= 0b00010000;  // kill digital input for channel 0
     288:	8e e7       	ldi	r24, 0x7E	; 126
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	2e e7       	ldi	r18, 0x7E	; 126
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	f9 01       	movw	r30, r18
     292:	20 81       	ld	r18, Z
     294:	20 61       	ori	r18, 0x10	; 16
     296:	fc 01       	movw	r30, r24
     298:	20 83       	st	Z, r18
      break;
     29a:	22 c0       	rjmp	.+68     	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_5:
      DIDR0 |= 0b00100000;  // kill digital input for channel 0
     29c:	8e e7       	ldi	r24, 0x7E	; 126
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	2e e7       	ldi	r18, 0x7E	; 126
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	f9 01       	movw	r30, r18
     2a6:	20 81       	ld	r18, Z
     2a8:	20 62       	ori	r18, 0x20	; 32
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 83       	st	Z, r18
      break;
     2ae:	18 c0       	rjmp	.+48     	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_6:
      DIDR0 |= 0b01000000;  // kill digital input for channel 0
     2b0:	8e e7       	ldi	r24, 0x7E	; 126
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	2e e7       	ldi	r18, 0x7E	; 126
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	f9 01       	movw	r30, r18
     2ba:	20 81       	ld	r18, Z
     2bc:	20 64       	ori	r18, 0x40	; 64
     2be:	fc 01       	movw	r30, r24
     2c0:	20 83       	st	Z, r18
      break;
     2c2:	0e c0       	rjmp	.+28     	; 0x2e0 <AtoD_SetChannel+0xe0>
    case AtoD_Channel_7:
      DIDR0 |= 0b10000000;  // kill digital input for channel 0
     2c4:	8e e7       	ldi	r24, 0x7E	; 126
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	2e e7       	ldi	r18, 0x7E	; 126
     2ca:	30 e0       	ldi	r19, 0x00	; 0
     2cc:	f9 01       	movw	r30, r18
     2ce:	20 81       	ld	r18, Z
     2d0:	20 68       	ori	r18, 0x80	; 128
     2d2:	fc 01       	movw	r30, r24
     2d4:	20 83       	st	Z, r18
      break;
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <AtoD_SetChannel+0xe0>
    default:               // other cases don't require digital inputs 
      DIDR0 = 0b00000000;  // all A/D channels as digital inputs
     2d8:	8e e7       	ldi	r24, 0x7E	; 126
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	fc 01       	movw	r30, r24
     2de:	10 82       	st	Z, r1
  }      
  
  // channel selection
  ADMUX &= 0b11110000;  // clear channel selection
     2e0:	8c e7       	ldi	r24, 0x7C	; 124
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	2c e7       	ldi	r18, 0x7C	; 124
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	f9 01       	movw	r30, r18
     2ea:	20 81       	ld	r18, Z
     2ec:	20 7f       	andi	r18, 0xF0	; 240
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 83       	st	Z, r18
  ADMUX |= chan;        // set back channel selection bits
     2f2:	8c e7       	ldi	r24, 0x7C	; 124
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	2c e7       	ldi	r18, 0x7C	; 124
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	f9 01       	movw	r30, r18
     2fc:	30 81       	ld	r19, Z
     2fe:	29 81       	ldd	r18, Y+1	; 0x01
     300:	23 2b       	or	r18, r19
     302:	fc 01       	movw	r30, r24
     304:	20 83       	st	Z, r18
     306:	00 00       	nop
     308:	0f 90       	pop	r0
     30a:	df 91       	pop	r29
     30c:	cf 91       	pop	r28
     30e:	08 95       	ret

00000310 <SCI0_Init>:
  (void)sprintf(buff, "0x%4.4X", uiVal);
  SCI0_TxString (buff);

  if (tl)
    SCI0_TxString ("\r\n");
}
     310:	0f 93       	push	r16
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	2c 97       	sbiw	r28, 0x0c	; 12
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
     328:	6b 83       	std	Y+3, r22	; 0x03
     32a:	7c 83       	std	Y+4, r23	; 0x04
     32c:	8d 83       	std	Y+5, r24	; 0x05
     32e:	9e 83       	std	Y+6, r25	; 0x06
     330:	2f 83       	std	Y+7, r18	; 0x07
     332:	38 87       	std	Y+8, r19	; 0x08
     334:	49 87       	std	Y+9, r20	; 0x09
     336:	5a 87       	std	Y+10, r21	; 0x0a
     338:	1c 87       	std	Y+12, r17	; 0x0c
     33a:	0b 87       	std	Y+11, r16	; 0x0b
     33c:	8b 81       	ldd	r24, Y+3	; 0x03
     33e:	9c 81       	ldd	r25, Y+4	; 0x04
     340:	ad 81       	ldd	r26, Y+5	; 0x05
     342:	be 81       	ldd	r27, Y+6	; 0x06
     344:	88 0f       	add	r24, r24
     346:	99 1f       	adc	r25, r25
     348:	aa 1f       	adc	r26, r26
     34a:	bb 1f       	adc	r27, r27
     34c:	9c 01       	movw	r18, r24
     34e:	ad 01       	movw	r20, r26
     350:	22 0f       	add	r18, r18
     352:	33 1f       	adc	r19, r19
     354:	44 1f       	adc	r20, r20
     356:	55 1f       	adc	r21, r21
     358:	22 0f       	add	r18, r18
     35a:	33 1f       	adc	r19, r19
     35c:	44 1f       	adc	r20, r20
     35e:	55 1f       	adc	r21, r21
     360:	82 0f       	add	r24, r18
     362:	93 1f       	adc	r25, r19
     364:	a4 1f       	adc	r26, r20
     366:	b5 1f       	adc	r27, r21
     368:	68 94       	set
     36a:	13 f8       	bld	r1, 3
     36c:	b6 95       	lsr	r27
     36e:	a7 95       	ror	r26
     370:	97 95       	ror	r25
     372:	87 95       	ror	r24
     374:	16 94       	lsr	r1
     376:	d1 f7       	brne	.-12     	; 0x36c <SCI0_Init+0x5c>
     378:	2f 81       	ldd	r18, Y+7	; 0x07
     37a:	38 85       	ldd	r19, Y+8	; 0x08
     37c:	49 85       	ldd	r20, Y+9	; 0x09
     37e:	5a 85       	ldd	r21, Y+10	; 0x0a
     380:	bc 01       	movw	r22, r24
     382:	cd 01       	movw	r24, r26
     384:	0e 94 4a 08 	call	0x1094	; 0x1094 <__udivmodsi4>
     388:	da 01       	movw	r26, r20
     38a:	c9 01       	movw	r24, r18
     38c:	05 96       	adiw	r24, 0x05	; 5
     38e:	a1 1d       	adc	r26, r1
     390:	b1 1d       	adc	r27, r1
     392:	2a e0       	ldi	r18, 0x0A	; 10
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	bc 01       	movw	r22, r24
     39c:	cd 01       	movw	r24, r26
     39e:	0e 94 4a 08 	call	0x1094	; 0x1094 <__udivmodsi4>
     3a2:	da 01       	movw	r26, r20
     3a4:	c9 01       	movw	r24, r18
     3a6:	01 97       	sbiw	r24, 0x01	; 1
     3a8:	9a 83       	std	Y+2, r25	; 0x02
     3aa:	89 83       	std	Y+1, r24	; 0x01
     3ac:	89 81       	ldd	r24, Y+1	; 0x01
     3ae:	9a 81       	ldd	r25, Y+2	; 0x02
     3b0:	81 15       	cp	r24, r1
     3b2:	90 41       	sbci	r25, 0x10	; 16
     3b4:	18 f0       	brcs	.+6      	; 0x3bc <SCI0_Init+0xac>
     3b6:	8f ef       	ldi	r24, 0xFF	; 255
     3b8:	9f ef       	ldi	r25, 0xFF	; 255
     3ba:	2f c0       	rjmp	.+94     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     3bc:	84 e6       	ldi	r24, 0x64	; 100
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	24 e6       	ldi	r18, 0x64	; 100
     3c2:	30 e0       	ldi	r19, 0x00	; 0
     3c4:	f9 01       	movw	r30, r18
     3c6:	20 81       	ld	r18, Z
     3c8:	2d 7f       	andi	r18, 0xFD	; 253
     3ca:	fc 01       	movw	r30, r24
     3cc:	20 83       	st	Z, r18
     3ce:	85 ec       	ldi	r24, 0xC5	; 197
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	29 81       	ldd	r18, Y+1	; 0x01
     3d4:	3a 81       	ldd	r19, Y+2	; 0x02
     3d6:	23 2f       	mov	r18, r19
     3d8:	33 27       	eor	r19, r19
     3da:	fc 01       	movw	r30, r24
     3dc:	20 83       	st	Z, r18
     3de:	84 ec       	ldi	r24, 0xC4	; 196
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	29 81       	ldd	r18, Y+1	; 0x01
     3e4:	fc 01       	movw	r30, r24
     3e6:	20 83       	st	Z, r18
     3e8:	81 ec       	ldi	r24, 0xC1	; 193
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	28 e1       	ldi	r18, 0x18	; 24
     3ee:	fc 01       	movw	r30, r24
     3f0:	20 83       	st	Z, r18
     3f2:	82 ec       	ldi	r24, 0xC2	; 194
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	26 e0       	ldi	r18, 0x06	; 6
     3f8:	fc 01       	movw	r30, r24
     3fa:	20 83       	st	Z, r18
     3fc:	8b 85       	ldd	r24, Y+11	; 0x0b
     3fe:	9c 85       	ldd	r25, Y+12	; 0x0c
     400:	89 2b       	or	r24, r25
     402:	49 f0       	breq	.+18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     404:	81 ec       	ldi	r24, 0xC1	; 193
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	21 ec       	ldi	r18, 0xC1	; 193
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	f9 01       	movw	r30, r18
     40e:	20 81       	ld	r18, Z
     410:	20 68       	ori	r18, 0x80	; 128
     412:	fc 01       	movw	r30, r24
     414:	20 83       	st	Z, r18
     416:	80 e0       	ldi	r24, 0x00	; 0
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	2c 96       	adiw	r28, 0x0c	; 12
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	de bf       	out	0x3e, r29	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	cd bf       	out	0x3d, r28	; 61
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	1f 91       	pop	r17
     42c:	0f 91       	pop	r16
     42e:	08 95       	ret

00000430 <SCI0_BSend>:
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	1f 92       	push	r1
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	89 83       	std	Y+1, r24	; 0x01
     43c:	00 00       	nop
     43e:	80 ec       	ldi	r24, 0xC0	; 192
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	fc 01       	movw	r30, r24
     444:	80 81       	ld	r24, Z
     446:	88 2f       	mov	r24, r24
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	80 72       	andi	r24, 0x20	; 32
     44c:	99 27       	eor	r25, r25
     44e:	89 2b       	or	r24, r25
     450:	b1 f3       	breq	.-20     	; 0x43e <SCI0_BSend+0xe>
     452:	80 ec       	ldi	r24, 0xC0	; 192
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	fc 01       	movw	r30, r24
     458:	80 81       	ld	r24, Z
     45a:	88 2f       	mov	r24, r24
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	80 74       	andi	r24, 0x40	; 64
     460:	99 27       	eor	r25, r25
     462:	89 2b       	or	r24, r25
     464:	29 f0       	breq	.+10     	; 0x470 <SCI0_BSend+0x40>
     466:	80 ec       	ldi	r24, 0xC0	; 192
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	20 e4       	ldi	r18, 0x40	; 64
     46c:	fc 01       	movw	r30, r24
     46e:	20 83       	st	Z, r18
     470:	86 ec       	ldi	r24, 0xC6	; 198
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	29 81       	ldd	r18, Y+1	; 0x01
     476:	fc 01       	movw	r30, r24
     478:	20 83       	st	Z, r18
     47a:	00 00       	nop
     47c:	0f 90       	pop	r0
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <SCI0_TxString>:

void SCI0_TxString (char * buff)
{
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	00 d0       	rcall	.+0      	; 0x48a <SCI0_TxString+0x6>
     48a:	cd b7       	in	r28, 0x3d	; 61
     48c:	de b7       	in	r29, 0x3e	; 62
     48e:	9a 83       	std	Y+2, r25	; 0x02
     490:	89 83       	std	Y+1, r24	; 0x01
  while (*buff)
     492:	0b c0       	rjmp	.+22     	; 0x4aa <SCI0_TxString+0x26>
  {
    SCI0_BSend(*buff);
     494:	89 81       	ldd	r24, Y+1	; 0x01
     496:	9a 81       	ldd	r25, Y+2	; 0x02
     498:	fc 01       	movw	r30, r24
     49a:	80 81       	ld	r24, Z
     49c:	0e 94 18 02 	call	0x430	; 0x430 <SCI0_BSend>
    ++buff;
     4a0:	89 81       	ldd	r24, Y+1	; 0x01
     4a2:	9a 81       	ldd	r25, Y+2	; 0x02
     4a4:	01 96       	adiw	r24, 0x01	; 1
     4a6:	9a 83       	std	Y+2, r25	; 0x02
     4a8:	89 83       	std	Y+1, r24	; 0x01
    SCI0_TxString ("\r\n");
}

void SCI0_TxString (char * buff)
{
  while (*buff)
     4aa:	89 81       	ldd	r24, Y+1	; 0x01
     4ac:	9a 81       	ldd	r25, Y+2	; 0x02
     4ae:	fc 01       	movw	r30, r24
     4b0:	80 81       	ld	r24, Z
     4b2:	88 23       	and	r24, r24
     4b4:	79 f7       	brne	.-34     	; 0x494 <SCI0_TxString+0x10>
  {
    SCI0_BSend(*buff);
    ++buff;
  }
}
     4b6:	00 00       	nop
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
     4bc:	df 91       	pop	r29
     4be:	cf 91       	pop	r28
     4c0:	08 95       	ret

000004c2 <Timer_Init>:

#include <avr/io.h>
#include "timer.h"

void Timer_Init (Timer_Prescale pre, unsigned int uiInitialOffset)
{
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	00 d0       	rcall	.+0      	; 0x4c8 <Timer_Init+0x6>
     4c8:	1f 92       	push	r1
     4ca:	cd b7       	in	r28, 0x3d	; 61
     4cc:	de b7       	in	r29, 0x3e	; 62
     4ce:	89 83       	std	Y+1, r24	; 0x01
     4d0:	7b 83       	std	Y+3, r23	; 0x03
     4d2:	6a 83       	std	Y+2, r22	; 0x02
	// start code will power off all modules...
	// ensure power is on : Timer 1
	// PRR on 328P, PRR0 on 328PB
	PRR &= ~(1 << PRTIM1);
     4d4:	84 e6       	ldi	r24, 0x64	; 100
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	24 e6       	ldi	r18, 0x64	; 100
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	f9 01       	movw	r30, r18
     4de:	20 81       	ld	r18, Z
     4e0:	27 7f       	andi	r18, 0xF7	; 247
     4e2:	fc 01       	movw	r30, r24
     4e4:	20 83       	st	Z, r18

	// set prescale to requested rate
	TCCR1B = 0;		// noise canceler disabled, waveform generator normal
     4e6:	81 e8       	ldi	r24, 0x81	; 129
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	fc 01       	movw	r30, r24
     4ec:	10 82       	st	Z, r1
	TCCR1B |= pre;	// put back requested prescale bits
     4ee:	81 e8       	ldi	r24, 0x81	; 129
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	21 e8       	ldi	r18, 0x81	; 129
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	f9 01       	movw	r30, r18
     4f8:	30 81       	ld	r19, Z
     4fa:	29 81       	ldd	r18, Y+1	; 0x01
     4fc:	23 2b       	or	r18, r19
     4fe:	fc 01       	movw	r30, r24
     500:	20 83       	st	Z, r18
	
	// setup initial event for output compare 1 A
	OCR1A = TCNT1 + uiInitialOffset;
     502:	88 e8       	ldi	r24, 0x88	; 136
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	24 e8       	ldi	r18, 0x84	; 132
     508:	30 e0       	ldi	r19, 0x00	; 0
     50a:	f9 01       	movw	r30, r18
     50c:	40 81       	ld	r20, Z
     50e:	51 81       	ldd	r21, Z+1	; 0x01
     510:	2a 81       	ldd	r18, Y+2	; 0x02
     512:	3b 81       	ldd	r19, Y+3	; 0x03
     514:	24 0f       	add	r18, r20
     516:	35 1f       	adc	r19, r21
     518:	fc 01       	movw	r30, r24
     51a:	31 83       	std	Z+1, r19	; 0x01
     51c:	20 83       	st	Z, r18

	// setup interrupt for output compare
	// timer/counter 1, output compare A match interrupt enable
	TIMSK1 = 0b00000010;
     51e:	8f e6       	ldi	r24, 0x6F	; 111
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	22 e0       	ldi	r18, 0x02	; 2
     524:	fc 01       	movw	r30, r24
     526:	20 83       	st	Z, r18
}
     528:	00 00       	nop
     52a:	0f 90       	pop	r0
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
     530:	df 91       	pop	r29
     532:	cf 91       	pop	r28
     534:	08 95       	ret

00000536 <Back_Sens_InitAll>:
/************************************************************************/
/* Header Implementation                                                */
/************************************************************************/

void Back_Sens_InitAll(void)
{
     536:	cf 93       	push	r28
     538:	df 93       	push	r29
     53a:	cd b7       	in	r28, 0x3d	; 61
     53c:	de b7       	in	r29, 0x3e	; 62
	Back_Sens_Init(Back_Sens_L);
     53e:	84 e0       	ldi	r24, 0x04	; 4
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	0e 94 ab 02 	call	0x556	; 0x556 <Back_Sens_Init>
	Back_Sens_Init(Back_Sens_R);
     546:	88 e4       	ldi	r24, 0x48	; 72
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 ab 02 	call	0x556	; 0x556 <Back_Sens_Init>
}
     54e:	00 00       	nop
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	08 95       	ret

00000556 <Back_Sens_Init>:

void Back_Sens_Init(int sens)
{
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	00 d0       	rcall	.+0      	; 0x55c <Back_Sens_Init+0x6>
     55c:	cd b7       	in	r28, 0x3d	; 61
     55e:	de b7       	in	r29, 0x3e	; 62
     560:	9a 83       	std	Y+2, r25	; 0x02
     562:	89 83       	std	Y+1, r24	; 0x01
	DDRD &= ~sens; //input
     564:	8a e2       	ldi	r24, 0x2A	; 42
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	2a e2       	ldi	r18, 0x2A	; 42
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	f9 01       	movw	r30, r18
     56e:	20 81       	ld	r18, Z
     570:	32 2f       	mov	r19, r18
     572:	29 81       	ldd	r18, Y+1	; 0x01
     574:	20 95       	com	r18
     576:	23 23       	and	r18, r19
     578:	fc 01       	movw	r30, r24
     57a:	20 83       	st	Z, r18
	
	PCMSK2 |= sens; // turn on PCINT18/19 pin mask (enable interrupts) (12.2.6)
     57c:	8d e6       	ldi	r24, 0x6D	; 109
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	2d e6       	ldi	r18, 0x6D	; 109
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	f9 01       	movw	r30, r18
     586:	20 81       	ld	r18, Z
     588:	32 2f       	mov	r19, r18
     58a:	29 81       	ldd	r18, Y+1	; 0x01
     58c:	23 2b       	or	r18, r19
     58e:	fc 01       	movw	r30, r24
     590:	20 83       	st	Z, r18
	PCICR |= 0b00000100; // turn on interrupts for group 2 (12.2.4)
     592:	88 e6       	ldi	r24, 0x68	; 104
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	28 e6       	ldi	r18, 0x68	; 104
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	f9 01       	movw	r30, r18
     59c:	20 81       	ld	r18, Z
     59e:	24 60       	ori	r18, 0x04	; 4
     5a0:	fc 01       	movw	r30, r24
     5a2:	20 83       	st	Z, r18
}
     5a4:	00 00       	nop
     5a6:	0f 90       	pop	r0
     5a8:	0f 90       	pop	r0
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	08 95       	ret

000005b0 <GD03_Init>:
/************************************************************************/
/* Header Implementation                                                */
/************************************************************************/

void GD03_Init(void)
{
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	cd b7       	in	r28, 0x3d	; 61
     5b6:	de b7       	in	r29, 0x3e	; 62
	AtoD_Init(AtoD_Channel_0); // pin 23
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <AtoD_Init>
}
     5be:	00 00       	nop
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	08 95       	ret

000005c6 <HCSR04_InitAll>:
	 {
		 duration = waitForEcho(device);
		 if(duration >= 0) distance = calculateDistance(duration);
	 }
	 return distance;
 }
     5c6:	cf 93       	push	r28
     5c8:	df 93       	push	r29
     5ca:	cd b7       	in	r28, 0x3d	; 61
     5cc:	de b7       	in	r29, 0x3e	; 62
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <HCSR04_InitDevice>
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <HCSR04_InitDevice>
     5da:	82 e0       	ldi	r24, 0x02	; 2
     5dc:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <HCSR04_InitDevice>
     5e0:	00 00       	nop
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	08 95       	ret

000005e8 <HCSR04_InitDevice>:
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	1f 92       	push	r1
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
     5f2:	89 83       	std	Y+1, r24	; 0x01
     5f4:	89 81       	ldd	r24, Y+1	; 0x01
     5f6:	88 2f       	mov	r24, r24
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	81 30       	cpi	r24, 0x01	; 1
     5fc:	91 05       	cpc	r25, r1
     5fe:	61 f1       	breq	.+88     	; 0x658 <HCSR04_InitDevice+0x70>
     600:	82 30       	cpi	r24, 0x02	; 2
     602:	91 05       	cpc	r25, r1
     604:	09 f4       	brne	.+2      	; 0x608 <HCSR04_InitDevice+0x20>
     606:	4d c0       	rjmp	.+154    	; 0x6a2 <HCSR04_InitDevice+0xba>
     608:	89 2b       	or	r24, r25
     60a:	09 f0       	breq	.+2      	; 0x60e <HCSR04_InitDevice+0x26>
     60c:	6f c0       	rjmp	.+222    	; 0x6ec <HCSR04_InitDevice+0x104>
     60e:	8a e2       	ldi	r24, 0x2A	; 42
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	2a e2       	ldi	r18, 0x2A	; 42
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	f9 01       	movw	r30, r18
     618:	20 81       	ld	r18, Z
     61a:	20 62       	ori	r18, 0x20	; 32
     61c:	fc 01       	movw	r30, r24
     61e:	20 83       	st	Z, r18
     620:	8a e2       	ldi	r24, 0x2A	; 42
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	2a e2       	ldi	r18, 0x2A	; 42
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	f9 01       	movw	r30, r18
     62a:	20 81       	ld	r18, Z
     62c:	2f 7b       	andi	r18, 0xBF	; 191
     62e:	fc 01       	movw	r30, r24
     630:	20 83       	st	Z, r18
     632:	8d e6       	ldi	r24, 0x6D	; 109
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	2d e6       	ldi	r18, 0x6D	; 109
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	f9 01       	movw	r30, r18
     63c:	20 81       	ld	r18, Z
     63e:	20 64       	ori	r18, 0x40	; 64
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18
     644:	88 e6       	ldi	r24, 0x68	; 104
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	28 e6       	ldi	r18, 0x68	; 104
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	f9 01       	movw	r30, r18
     64e:	20 81       	ld	r18, Z
     650:	24 60       	ori	r18, 0x04	; 4
     652:	fc 01       	movw	r30, r24
     654:	20 83       	st	Z, r18
     656:	4a c0       	rjmp	.+148    	; 0x6ec <HCSR04_InitDevice+0x104>
     658:	8a e2       	ldi	r24, 0x2A	; 42
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	2a e2       	ldi	r18, 0x2A	; 42
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	f9 01       	movw	r30, r18
     662:	20 81       	ld	r18, Z
     664:	20 68       	ori	r18, 0x80	; 128
     666:	fc 01       	movw	r30, r24
     668:	20 83       	st	Z, r18
     66a:	84 e2       	ldi	r24, 0x24	; 36
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	24 e2       	ldi	r18, 0x24	; 36
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	f9 01       	movw	r30, r18
     674:	20 81       	ld	r18, Z
     676:	2e 7f       	andi	r18, 0xFE	; 254
     678:	fc 01       	movw	r30, r24
     67a:	20 83       	st	Z, r18
     67c:	8b e6       	ldi	r24, 0x6B	; 107
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	2b e6       	ldi	r18, 0x6B	; 107
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	f9 01       	movw	r30, r18
     686:	20 81       	ld	r18, Z
     688:	21 60       	ori	r18, 0x01	; 1
     68a:	fc 01       	movw	r30, r24
     68c:	20 83       	st	Z, r18
     68e:	88 e6       	ldi	r24, 0x68	; 104
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	28 e6       	ldi	r18, 0x68	; 104
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	f9 01       	movw	r30, r18
     698:	20 81       	ld	r18, Z
     69a:	21 60       	ori	r18, 0x01	; 1
     69c:	fc 01       	movw	r30, r24
     69e:	20 83       	st	Z, r18
     6a0:	25 c0       	rjmp	.+74     	; 0x6ec <HCSR04_InitDevice+0x104>
     6a2:	84 e2       	ldi	r24, 0x24	; 36
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	24 e2       	ldi	r18, 0x24	; 36
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	f9 01       	movw	r30, r18
     6ac:	20 81       	ld	r18, Z
     6ae:	22 60       	ori	r18, 0x02	; 2
     6b0:	fc 01       	movw	r30, r24
     6b2:	20 83       	st	Z, r18
     6b4:	84 e2       	ldi	r24, 0x24	; 36
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	24 e2       	ldi	r18, 0x24	; 36
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	f9 01       	movw	r30, r18
     6be:	20 81       	ld	r18, Z
     6c0:	2b 7f       	andi	r18, 0xFB	; 251
     6c2:	fc 01       	movw	r30, r24
     6c4:	20 83       	st	Z, r18
     6c6:	8b e6       	ldi	r24, 0x6B	; 107
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	2b e6       	ldi	r18, 0x6B	; 107
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	f9 01       	movw	r30, r18
     6d0:	20 81       	ld	r18, Z
     6d2:	24 60       	ori	r18, 0x04	; 4
     6d4:	fc 01       	movw	r30, r24
     6d6:	20 83       	st	Z, r18
     6d8:	88 e6       	ldi	r24, 0x68	; 104
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	28 e6       	ldi	r18, 0x68	; 104
     6de:	30 e0       	ldi	r19, 0x00	; 0
     6e0:	f9 01       	movw	r30, r18
     6e2:	20 81       	ld	r18, Z
     6e4:	21 60       	ori	r18, 0x01	; 1
     6e6:	fc 01       	movw	r30, r24
     6e8:	20 83       	st	Z, r18
     6ea:	00 00       	nop
     6ec:	00 00       	nop
     6ee:	0f 90       	pop	r0
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	08 95       	ret

000006f6 <HCSR04_ISR>:

 void HCSR04_ISR()
 {
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	00 d0       	rcall	.+0      	; 0x6fc <HCSR04_ISR+0x6>
     6fc:	cd b7       	in	r28, 0x3d	; 61
     6fe:	de b7       	in	r29, 0x3e	; 62
	 // Only perform the check if there's an active device
	 if(activeDevice != HCSR04_None)
     700:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     704:	8a 30       	cpi	r24, 0x0A	; 10
     706:	09 f4       	brne	.+2      	; 0x70a <HCSR04_ISR+0x14>
     708:	58 c0       	rjmp	.+176    	; 0x7ba <HCSR04_ISR+0xc4>
	 {
		 int condition = 0;
     70a:	1a 82       	std	Y+2, r1	; 0x02
     70c:	19 82       	std	Y+1, r1	; 0x01
		 // determine the high condition for the active device
		 switch(activeDevice)
     70e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     712:	88 2f       	mov	r24, r24
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	81 30       	cpi	r24, 0x01	; 1
     718:	91 05       	cpc	r25, r1
     71a:	89 f0       	breq	.+34     	; 0x73e <HCSR04_ISR+0x48>
     71c:	82 30       	cpi	r24, 0x02	; 2
     71e:	91 05       	cpc	r25, r1
     720:	c9 f0       	breq	.+50     	; 0x754 <HCSR04_ISR+0x5e>
     722:	89 2b       	or	r24, r25
     724:	09 f0       	breq	.+2      	; 0x728 <HCSR04_ISR+0x32>
				break;
			 case HCSR04_R:
				condition = PINB & HCSR04_R_Echo;
				break;
			default:
				break;
     726:	21 c0       	rjmp	.+66     	; 0x76a <HCSR04_ISR+0x74>
		 int condition = 0;
		 // determine the high condition for the active device
		 switch(activeDevice)
		 {
			 case HCSR04_L:
				condition = PIND & HCSR04_L_Echo;
     728:	89 e2       	ldi	r24, 0x29	; 41
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	fc 01       	movw	r30, r24
     72e:	80 81       	ld	r24, Z
     730:	88 2f       	mov	r24, r24
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	80 74       	andi	r24, 0x40	; 64
     736:	99 27       	eor	r25, r25
     738:	9a 83       	std	Y+2, r25	; 0x02
     73a:	89 83       	std	Y+1, r24	; 0x01
				break;
     73c:	16 c0       	rjmp	.+44     	; 0x76a <HCSR04_ISR+0x74>
			 case HCSR04_C:
				condition = PINB & HCSR04_C_Echo;
     73e:	83 e2       	ldi	r24, 0x23	; 35
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	fc 01       	movw	r30, r24
     744:	80 81       	ld	r24, Z
     746:	88 2f       	mov	r24, r24
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	81 70       	andi	r24, 0x01	; 1
     74c:	99 27       	eor	r25, r25
     74e:	9a 83       	std	Y+2, r25	; 0x02
     750:	89 83       	std	Y+1, r24	; 0x01
				break;
     752:	0b c0       	rjmp	.+22     	; 0x76a <HCSR04_ISR+0x74>
			 case HCSR04_R:
				condition = PINB & HCSR04_R_Echo;
     754:	83 e2       	ldi	r24, 0x23	; 35
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	fc 01       	movw	r30, r24
     75a:	80 81       	ld	r24, Z
     75c:	88 2f       	mov	r24, r24
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	84 70       	andi	r24, 0x04	; 4
     762:	99 27       	eor	r25, r25
     764:	9a 83       	std	Y+2, r25	; 0x02
     766:	89 83       	std	Y+1, r24	; 0x01
				break;
     768:	00 00       	nop
			default:
				break;
		 }
		 
		 // When the echo starts, track current TCNT value
		 if(condition)
     76a:	89 81       	ldd	r24, Y+1	; 0x01
     76c:	9a 81       	ldd	r25, Y+2	; 0x02
     76e:	89 2b       	or	r24, r25
     770:	89 f0       	breq	.+34     	; 0x794 <HCSR04_ISR+0x9e>
		 {
			 echoTimeStart = TCNT1;
     772:	84 e8       	ldi	r24, 0x84	; 132
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	fc 01       	movw	r30, r24
     778:	80 81       	ld	r24, Z
     77a:	91 81       	ldd	r25, Z+1	; 0x01
     77c:	cc 01       	movw	r24, r24
     77e:	a0 e0       	ldi	r26, 0x00	; 0
     780:	b0 e0       	ldi	r27, 0x00	; 0
     782:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
     786:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
     78a:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <__data_end+0x2>
     78e:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <__data_end+0x3>
		 {
			 echoTimeEnd = TCNT1;
			 activeDevice = HCSR04_None;
		 }
	 }
 }
     792:	13 c0       	rjmp	.+38     	; 0x7ba <HCSR04_ISR+0xc4>
			 echoTimeStart = TCNT1;
		 }
		 // When echo ends, track the new TCNT value and indicate no device is active
		 else
		 {
			 echoTimeEnd = TCNT1;
     794:	84 e8       	ldi	r24, 0x84	; 132
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	fc 01       	movw	r30, r24
     79a:	80 81       	ld	r24, Z
     79c:	91 81       	ldd	r25, Z+1	; 0x01
     79e:	cc 01       	movw	r24, r24
     7a0:	a0 e0       	ldi	r26, 0x00	; 0
     7a2:	b0 e0       	ldi	r27, 0x00	; 0
     7a4:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <echoTimeEnd>
     7a8:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <echoTimeEnd+0x1>
     7ac:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <echoTimeEnd+0x2>
     7b0:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <echoTimeEnd+0x3>
			 activeDevice = HCSR04_None;
     7b4:	8a e0       	ldi	r24, 0x0A	; 10
     7b6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		 }
	 }
 }
     7ba:	00 00       	nop
     7bc:	0f 90       	pop	r0
     7be:	0f 90       	pop	r0
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	08 95       	ret

000007c6 <main>:
// constant for timer output compare offset, init and ISR rearm
const unsigned int _Timer_OC_Offset = 1000; // 1 / (16000000 / 8 / 1000) = 0.5ms (prescale 8) -- wanted prescale 16
// global counter for timer ISR, used as reference to coordinate activities
volatile unsigned int _Ticks = 0;
int main(void)
{
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	00 d0       	rcall	.+0      	; 0x7d0 <main+0xa>
     7d0:	00 d0       	rcall	.+0      	; 0x7d2 <main+0xc>
     7d2:	cd b7       	in	r28, 0x3d	; 61
     7d4:	de b7       	in	r29, 0x3e	; 62
	// variable for managing the A/D update
	const unsigned int cuiAtoDEventCount = 1000; // every 1/2 second
     7d6:	88 ee       	ldi	r24, 0xE8	; 232
     7d8:	93 e0       	ldi	r25, 0x03	; 3
     7da:	9c 83       	std	Y+4, r25	; 0x04
     7dc:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int uiAtoDEventNext = cuiAtoDEventCount;
     7de:	8b 81       	ldd	r24, Y+3	; 0x03
     7e0:	9c 81       	ldd	r25, Y+4	; 0x04
     7e2:	9a 83       	std	Y+2, r25	; 0x02
     7e4:	89 83       	std	Y+1, r24	; 0x01
	// one-time initialization section
	// bring up the timer, requires ISR!
	Timer_Init(Timer_Prescale_8, _Timer_OC_Offset); // 1ms intervals
     7e6:	88 ee       	ldi	r24, 0xE8	; 232
     7e8:	93 e0       	ldi	r25, 0x03	; 3
     7ea:	bc 01       	movw	r22, r24
     7ec:	82 e0       	ldi	r24, 0x02	; 2
     7ee:	0e 94 61 02 	call	0x4c2	; 0x4c2 <Timer_Init>
	// enable sleep mode, for idle, sort of similar to WAI on 9S12X (13.2)
	sleep_enable();
     7f2:	83 e5       	ldi	r24, 0x53	; 83
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	23 e5       	ldi	r18, 0x53	; 83
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	f9 01       	movw	r30, r18
     7fc:	20 81       	ld	r18, Z
     7fe:	21 60       	ori	r18, 0x01	; 1
     800:	fc 01       	movw	r30, r24
     802:	20 83       	st	Z, r18
	SCI0_Init(F_CPU, 9600, 1); // 16Mhz clock, 9600 baud
     804:	01 e0       	ldi	r16, 0x01	; 1
     806:	10 e0       	ldi	r17, 0x00	; 0
     808:	20 e8       	ldi	r18, 0x80	; 128
     80a:	35 e2       	ldi	r19, 0x25	; 37
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	50 e0       	ldi	r21, 0x00	; 0
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	74 e2       	ldi	r23, 0x24	; 36
     814:	84 ef       	ldi	r24, 0xF4	; 244
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0e 94 88 01 	call	0x310	; 0x310 <SCI0_Init>

	// welcome message, so we know it booted OK
	SCI0_TxString("\n328 Up! Characters will echo.\n");
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	0e 94 42 02 	call	0x484	; 0x484 <SCI0_TxString>
	GD03_Init();
     824:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <GD03_Init>
	// requires ISR for PCI2
	Back_Sens_InitAll();
     828:	0e 94 9b 02 	call	0x536	; 0x536 <Back_Sens_InitAll>
	// requires ISR for PCI2 & PCI0
	HCSR04_InitAll();
     82c:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <HCSR04_InitAll>


	// set the global interrupt flag (enable interrupts)
	// this is backwards from the 9S12
	sei();
     830:	78 94       	sei
	// make portc2 (pin 25) an output (PC2)
	DDRC |= LED;
     832:	87 e2       	ldi	r24, 0x27	; 39
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	27 e2       	ldi	r18, 0x27	; 39
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	f9 01       	movw	r30, r18
     83c:	20 81       	ld	r18, Z
     83e:	24 60       	ori	r18, 0x04	; 4
     840:	fc 01       	movw	r30, r24
     842:	20 83       	st	Z, r18
		else
		{
			PORTC &= ~LED; // turn off LED
		}*/
		// go idle!
		sleep_cpu();
     844:	88 95       	sleep

		//// are we past the scheduled event?
		if (uiAtoDEventNext - _Ticks > cuiAtoDEventCount)
     846:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <_Ticks>
     84a:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <_Ticks+0x1>
     84e:	29 81       	ldd	r18, Y+1	; 0x01
     850:	3a 81       	ldd	r19, Y+2	; 0x02
     852:	28 1b       	sub	r18, r24
     854:	39 0b       	sbc	r19, r25
     856:	8b 81       	ldd	r24, Y+3	; 0x03
     858:	9c 81       	ldd	r25, Y+4	; 0x04
     85a:	82 17       	cp	r24, r18
     85c:	93 07       	cpc	r25, r19
     85e:	90 f7       	brcc	.-28     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
		{
			uiAtoDEventNext += cuiAtoDEventCount; // rearm
     860:	29 81       	ldd	r18, Y+1	; 0x01
     862:	3a 81       	ldd	r19, Y+2	; 0x02
     864:	8b 81       	ldd	r24, Y+3	; 0x03
     866:	9c 81       	ldd	r25, Y+4	; 0x04
     868:	82 0f       	add	r24, r18
     86a:	93 1f       	adc	r25, r19
     86c:	9a 83       	std	Y+2, r25	; 0x02
     86e:	89 83       	std	Y+1, r24	; 0x01
			else
			{
				PORTC &= ~LED; // turn off LED
			}*/
		}
	}
     870:	e9 cf       	rjmp	.-46     	; 0x844 <__DATA_REGION_LENGTH__+0x44>

00000872 <__vector_11>:
}
// output compare A interrupt for timer
ISR(TIMER1_COMPA_vect)
{
     872:	1f 92       	push	r1
     874:	0f 92       	push	r0
     876:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     87a:	0f 92       	push	r0
     87c:	11 24       	eor	r1, r1
     87e:	2f 93       	push	r18
     880:	3f 93       	push	r19
     882:	4f 93       	push	r20
     884:	5f 93       	push	r21
     886:	8f 93       	push	r24
     888:	9f 93       	push	r25
     88a:	ef 93       	push	r30
     88c:	ff 93       	push	r31
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	cd b7       	in	r28, 0x3d	; 61
     894:	de b7       	in	r29, 0x3e	; 62
	// rearm the output compare operation
	OCR1A += _Timer_OC_Offset; // 1ms intervals
     896:	88 e8       	ldi	r24, 0x88	; 136
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	28 e8       	ldi	r18, 0x88	; 136
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	f9 01       	movw	r30, r18
     8a0:	40 81       	ld	r20, Z
     8a2:	51 81       	ldd	r21, Z+1	; 0x01
     8a4:	28 ee       	ldi	r18, 0xE8	; 232
     8a6:	33 e0       	ldi	r19, 0x03	; 3
     8a8:	24 0f       	add	r18, r20
     8aa:	35 1f       	adc	r19, r21
     8ac:	fc 01       	movw	r30, r24
     8ae:	31 83       	std	Z+1, r19	; 0x01
     8b0:	20 83       	st	Z, r18

	// up the global tick count
	++_Ticks;
     8b2:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <_Ticks>
     8b6:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <_Ticks+0x1>
     8ba:	01 96       	adiw	r24, 0x01	; 1
     8bc:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <_Ticks+0x1>
     8c0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <_Ticks>
}
     8c4:	00 00       	nop
     8c6:	df 91       	pop	r29
     8c8:	cf 91       	pop	r28
     8ca:	ff 91       	pop	r31
     8cc:	ef 91       	pop	r30
     8ce:	9f 91       	pop	r25
     8d0:	8f 91       	pop	r24
     8d2:	5f 91       	pop	r21
     8d4:	4f 91       	pop	r20
     8d6:	3f 91       	pop	r19
     8d8:	2f 91       	pop	r18
     8da:	0f 90       	pop	r0
     8dc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     8e0:	0f 90       	pop	r0
     8e2:	1f 90       	pop	r1
     8e4:	18 95       	reti

000008e6 <__vector_5>:

// ISR for PCI2, covering PCINT23 through PCINT16
ISR (PCINT2_vect)
{
     8e6:	1f 92       	push	r1
     8e8:	0f 92       	push	r0
     8ea:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     8ee:	0f 92       	push	r0
     8f0:	11 24       	eor	r1, r1
     8f2:	2f 93       	push	r18
     8f4:	3f 93       	push	r19
     8f6:	4f 93       	push	r20
     8f8:	5f 93       	push	r21
     8fa:	6f 93       	push	r22
     8fc:	7f 93       	push	r23
     8fe:	8f 93       	push	r24
     900:	9f 93       	push	r25
     902:	af 93       	push	r26
     904:	bf 93       	push	r27
     906:	ef 93       	push	r30
     908:	ff 93       	push	r31
     90a:	cf 93       	push	r28
     90c:	df 93       	push	r29
     90e:	cd b7       	in	r28, 0x3d	; 61
     910:	de b7       	in	r29, 0x3e	; 62
	HCSR04_ISR();
     912:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <HCSR04_ISR>
	}
	else
	{
		PORTC &= ~LED; // turn off LED
	}*/
}
     916:	00 00       	nop
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	ff 91       	pop	r31
     91e:	ef 91       	pop	r30
     920:	bf 91       	pop	r27
     922:	af 91       	pop	r26
     924:	9f 91       	pop	r25
     926:	8f 91       	pop	r24
     928:	7f 91       	pop	r23
     92a:	6f 91       	pop	r22
     92c:	5f 91       	pop	r21
     92e:	4f 91       	pop	r20
     930:	3f 91       	pop	r19
     932:	2f 91       	pop	r18
     934:	0f 90       	pop	r0
     936:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     93a:	0f 90       	pop	r0
     93c:	1f 90       	pop	r1
     93e:	18 95       	reti

00000940 <__vector_3>:

// ISR for PCI0, covering PCINT0 through PCINT8
ISR (PCINT0_vect)
{
     940:	1f 92       	push	r1
     942:	0f 92       	push	r0
     944:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     948:	0f 92       	push	r0
     94a:	11 24       	eor	r1, r1
     94c:	2f 93       	push	r18
     94e:	3f 93       	push	r19
     950:	4f 93       	push	r20
     952:	5f 93       	push	r21
     954:	6f 93       	push	r22
     956:	7f 93       	push	r23
     958:	8f 93       	push	r24
     95a:	9f 93       	push	r25
     95c:	af 93       	push	r26
     95e:	bf 93       	push	r27
     960:	ef 93       	push	r30
     962:	ff 93       	push	r31
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	cd b7       	in	r28, 0x3d	; 61
     96a:	de b7       	in	r29, 0x3e	; 62
	HCSR04_ISR();	
     96c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <HCSR04_ISR>
}
     970:	00 00       	nop
     972:	df 91       	pop	r29
     974:	cf 91       	pop	r28
     976:	ff 91       	pop	r31
     978:	ef 91       	pop	r30
     97a:	bf 91       	pop	r27
     97c:	af 91       	pop	r26
     97e:	9f 91       	pop	r25
     980:	8f 91       	pop	r24
     982:	7f 91       	pop	r23
     984:	6f 91       	pop	r22
     986:	5f 91       	pop	r21
     988:	4f 91       	pop	r20
     98a:	3f 91       	pop	r19
     98c:	2f 91       	pop	r18
     98e:	0f 90       	pop	r0
     990:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     994:	0f 90       	pop	r0
     996:	1f 90       	pop	r1
     998:	18 95       	reti

0000099a <vfprintf>:
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e3 ed       	ldi	r30, 0xD3	; 211
     9a0:	f4 e0       	ldi	r31, 0x04	; 4
     9a2:	0c 94 72 08 	jmp	0x10e4	; 0x10e4 <__prologue_saves__>
     9a6:	7c 01       	movw	r14, r24
     9a8:	1b 01       	movw	r2, r22
     9aa:	6a 01       	movw	r12, r20
     9ac:	fc 01       	movw	r30, r24
     9ae:	17 82       	std	Z+7, r1	; 0x07
     9b0:	16 82       	std	Z+6, r1	; 0x06
     9b2:	83 81       	ldd	r24, Z+3	; 0x03
     9b4:	81 ff       	sbrs	r24, 1
     9b6:	44 c3       	rjmp	.+1672   	; 0x1040 <vfprintf+0x6a6>
     9b8:	9e 01       	movw	r18, r28
     9ba:	2f 5f       	subi	r18, 0xFF	; 255
     9bc:	3f 4f       	sbci	r19, 0xFF	; 255
     9be:	39 01       	movw	r6, r18
     9c0:	f7 01       	movw	r30, r14
     9c2:	93 81       	ldd	r25, Z+3	; 0x03
     9c4:	f1 01       	movw	r30, r2
     9c6:	93 fd       	sbrc	r25, 3
     9c8:	85 91       	lpm	r24, Z+
     9ca:	93 ff       	sbrs	r25, 3
     9cc:	81 91       	ld	r24, Z+
     9ce:	1f 01       	movw	r2, r30
     9d0:	88 23       	and	r24, r24
     9d2:	09 f4       	brne	.+2      	; 0x9d6 <vfprintf+0x3c>
     9d4:	31 c3       	rjmp	.+1634   	; 0x1038 <vfprintf+0x69e>
     9d6:	85 32       	cpi	r24, 0x25	; 37
     9d8:	39 f4       	brne	.+14     	; 0x9e8 <vfprintf+0x4e>
     9da:	93 fd       	sbrc	r25, 3
     9dc:	85 91       	lpm	r24, Z+
     9de:	93 ff       	sbrs	r25, 3
     9e0:	81 91       	ld	r24, Z+
     9e2:	1f 01       	movw	r2, r30
     9e4:	85 32       	cpi	r24, 0x25	; 37
     9e6:	39 f4       	brne	.+14     	; 0x9f6 <vfprintf+0x5c>
     9e8:	b7 01       	movw	r22, r14
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     9f0:	56 01       	movw	r10, r12
     9f2:	65 01       	movw	r12, r10
     9f4:	e5 cf       	rjmp	.-54     	; 0x9c0 <vfprintf+0x26>
     9f6:	10 e0       	ldi	r17, 0x00	; 0
     9f8:	51 2c       	mov	r5, r1
     9fa:	91 2c       	mov	r9, r1
     9fc:	ff e1       	ldi	r31, 0x1F	; 31
     9fe:	f9 15       	cp	r31, r9
     a00:	d8 f0       	brcs	.+54     	; 0xa38 <vfprintf+0x9e>
     a02:	8b 32       	cpi	r24, 0x2B	; 43
     a04:	79 f0       	breq	.+30     	; 0xa24 <vfprintf+0x8a>
     a06:	38 f4       	brcc	.+14     	; 0xa16 <vfprintf+0x7c>
     a08:	80 32       	cpi	r24, 0x20	; 32
     a0a:	79 f0       	breq	.+30     	; 0xa2a <vfprintf+0x90>
     a0c:	83 32       	cpi	r24, 0x23	; 35
     a0e:	a1 f4       	brne	.+40     	; 0xa38 <vfprintf+0x9e>
     a10:	f9 2d       	mov	r31, r9
     a12:	f0 61       	ori	r31, 0x10	; 16
     a14:	2e c0       	rjmp	.+92     	; 0xa72 <vfprintf+0xd8>
     a16:	8d 32       	cpi	r24, 0x2D	; 45
     a18:	61 f0       	breq	.+24     	; 0xa32 <vfprintf+0x98>
     a1a:	80 33       	cpi	r24, 0x30	; 48
     a1c:	69 f4       	brne	.+26     	; 0xa38 <vfprintf+0x9e>
     a1e:	29 2d       	mov	r18, r9
     a20:	21 60       	ori	r18, 0x01	; 1
     a22:	2d c0       	rjmp	.+90     	; 0xa7e <vfprintf+0xe4>
     a24:	39 2d       	mov	r19, r9
     a26:	32 60       	ori	r19, 0x02	; 2
     a28:	93 2e       	mov	r9, r19
     a2a:	89 2d       	mov	r24, r9
     a2c:	84 60       	ori	r24, 0x04	; 4
     a2e:	98 2e       	mov	r9, r24
     a30:	2a c0       	rjmp	.+84     	; 0xa86 <vfprintf+0xec>
     a32:	e9 2d       	mov	r30, r9
     a34:	e8 60       	ori	r30, 0x08	; 8
     a36:	15 c0       	rjmp	.+42     	; 0xa62 <vfprintf+0xc8>
     a38:	97 fc       	sbrc	r9, 7
     a3a:	2d c0       	rjmp	.+90     	; 0xa96 <vfprintf+0xfc>
     a3c:	20 ed       	ldi	r18, 0xD0	; 208
     a3e:	28 0f       	add	r18, r24
     a40:	2a 30       	cpi	r18, 0x0A	; 10
     a42:	88 f4       	brcc	.+34     	; 0xa66 <vfprintf+0xcc>
     a44:	96 fe       	sbrs	r9, 6
     a46:	06 c0       	rjmp	.+12     	; 0xa54 <vfprintf+0xba>
     a48:	3a e0       	ldi	r19, 0x0A	; 10
     a4a:	13 9f       	mul	r17, r19
     a4c:	20 0d       	add	r18, r0
     a4e:	11 24       	eor	r1, r1
     a50:	12 2f       	mov	r17, r18
     a52:	19 c0       	rjmp	.+50     	; 0xa86 <vfprintf+0xec>
     a54:	8a e0       	ldi	r24, 0x0A	; 10
     a56:	58 9e       	mul	r5, r24
     a58:	20 0d       	add	r18, r0
     a5a:	11 24       	eor	r1, r1
     a5c:	52 2e       	mov	r5, r18
     a5e:	e9 2d       	mov	r30, r9
     a60:	e0 62       	ori	r30, 0x20	; 32
     a62:	9e 2e       	mov	r9, r30
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <vfprintf+0xec>
     a66:	8e 32       	cpi	r24, 0x2E	; 46
     a68:	31 f4       	brne	.+12     	; 0xa76 <vfprintf+0xdc>
     a6a:	96 fc       	sbrc	r9, 6
     a6c:	e5 c2       	rjmp	.+1482   	; 0x1038 <vfprintf+0x69e>
     a6e:	f9 2d       	mov	r31, r9
     a70:	f0 64       	ori	r31, 0x40	; 64
     a72:	9f 2e       	mov	r9, r31
     a74:	08 c0       	rjmp	.+16     	; 0xa86 <vfprintf+0xec>
     a76:	8c 36       	cpi	r24, 0x6C	; 108
     a78:	21 f4       	brne	.+8      	; 0xa82 <vfprintf+0xe8>
     a7a:	29 2d       	mov	r18, r9
     a7c:	20 68       	ori	r18, 0x80	; 128
     a7e:	92 2e       	mov	r9, r18
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <vfprintf+0xec>
     a82:	88 36       	cpi	r24, 0x68	; 104
     a84:	41 f4       	brne	.+16     	; 0xa96 <vfprintf+0xfc>
     a86:	f1 01       	movw	r30, r2
     a88:	93 fd       	sbrc	r25, 3
     a8a:	85 91       	lpm	r24, Z+
     a8c:	93 ff       	sbrs	r25, 3
     a8e:	81 91       	ld	r24, Z+
     a90:	1f 01       	movw	r2, r30
     a92:	81 11       	cpse	r24, r1
     a94:	b3 cf       	rjmp	.-154    	; 0x9fc <vfprintf+0x62>
     a96:	9b eb       	ldi	r25, 0xBB	; 187
     a98:	98 0f       	add	r25, r24
     a9a:	93 30       	cpi	r25, 0x03	; 3
     a9c:	20 f4       	brcc	.+8      	; 0xaa6 <vfprintf+0x10c>
     a9e:	99 2d       	mov	r25, r9
     aa0:	90 61       	ori	r25, 0x10	; 16
     aa2:	80 5e       	subi	r24, 0xE0	; 224
     aa4:	07 c0       	rjmp	.+14     	; 0xab4 <vfprintf+0x11a>
     aa6:	9b e9       	ldi	r25, 0x9B	; 155
     aa8:	98 0f       	add	r25, r24
     aaa:	93 30       	cpi	r25, 0x03	; 3
     aac:	08 f0       	brcs	.+2      	; 0xab0 <vfprintf+0x116>
     aae:	66 c1       	rjmp	.+716    	; 0xd7c <vfprintf+0x3e2>
     ab0:	99 2d       	mov	r25, r9
     ab2:	9f 7e       	andi	r25, 0xEF	; 239
     ab4:	96 ff       	sbrs	r25, 6
     ab6:	16 e0       	ldi	r17, 0x06	; 6
     ab8:	9f 73       	andi	r25, 0x3F	; 63
     aba:	99 2e       	mov	r9, r25
     abc:	85 36       	cpi	r24, 0x65	; 101
     abe:	19 f4       	brne	.+6      	; 0xac6 <vfprintf+0x12c>
     ac0:	90 64       	ori	r25, 0x40	; 64
     ac2:	99 2e       	mov	r9, r25
     ac4:	08 c0       	rjmp	.+16     	; 0xad6 <vfprintf+0x13c>
     ac6:	86 36       	cpi	r24, 0x66	; 102
     ac8:	21 f4       	brne	.+8      	; 0xad2 <vfprintf+0x138>
     aca:	39 2f       	mov	r19, r25
     acc:	30 68       	ori	r19, 0x80	; 128
     ace:	93 2e       	mov	r9, r19
     ad0:	02 c0       	rjmp	.+4      	; 0xad6 <vfprintf+0x13c>
     ad2:	11 11       	cpse	r17, r1
     ad4:	11 50       	subi	r17, 0x01	; 1
     ad6:	97 fe       	sbrs	r9, 7
     ad8:	07 c0       	rjmp	.+14     	; 0xae8 <vfprintf+0x14e>
     ada:	1c 33       	cpi	r17, 0x3C	; 60
     adc:	50 f4       	brcc	.+20     	; 0xaf2 <vfprintf+0x158>
     ade:	44 24       	eor	r4, r4
     ae0:	43 94       	inc	r4
     ae2:	41 0e       	add	r4, r17
     ae4:	27 e0       	ldi	r18, 0x07	; 7
     ae6:	0b c0       	rjmp	.+22     	; 0xafe <vfprintf+0x164>
     ae8:	18 30       	cpi	r17, 0x08	; 8
     aea:	38 f0       	brcs	.+14     	; 0xafa <vfprintf+0x160>
     aec:	27 e0       	ldi	r18, 0x07	; 7
     aee:	17 e0       	ldi	r17, 0x07	; 7
     af0:	05 c0       	rjmp	.+10     	; 0xafc <vfprintf+0x162>
     af2:	27 e0       	ldi	r18, 0x07	; 7
     af4:	9c e3       	ldi	r25, 0x3C	; 60
     af6:	49 2e       	mov	r4, r25
     af8:	02 c0       	rjmp	.+4      	; 0xafe <vfprintf+0x164>
     afa:	21 2f       	mov	r18, r17
     afc:	41 2c       	mov	r4, r1
     afe:	56 01       	movw	r10, r12
     b00:	84 e0       	ldi	r24, 0x04	; 4
     b02:	a8 0e       	add	r10, r24
     b04:	b1 1c       	adc	r11, r1
     b06:	f6 01       	movw	r30, r12
     b08:	60 81       	ld	r22, Z
     b0a:	71 81       	ldd	r23, Z+1	; 0x01
     b0c:	82 81       	ldd	r24, Z+2	; 0x02
     b0e:	93 81       	ldd	r25, Z+3	; 0x03
     b10:	04 2d       	mov	r16, r4
     b12:	a3 01       	movw	r20, r6
     b14:	0e 94 a9 08 	call	0x1152	; 0x1152 <__ftoa_engine>
     b18:	6c 01       	movw	r12, r24
     b1a:	f9 81       	ldd	r31, Y+1	; 0x01
     b1c:	fc 87       	std	Y+12, r31	; 0x0c
     b1e:	f0 ff       	sbrs	r31, 0
     b20:	02 c0       	rjmp	.+4      	; 0xb26 <vfprintf+0x18c>
     b22:	f3 ff       	sbrs	r31, 3
     b24:	06 c0       	rjmp	.+12     	; 0xb32 <vfprintf+0x198>
     b26:	91 fc       	sbrc	r9, 1
     b28:	06 c0       	rjmp	.+12     	; 0xb36 <vfprintf+0x19c>
     b2a:	92 fe       	sbrs	r9, 2
     b2c:	06 c0       	rjmp	.+12     	; 0xb3a <vfprintf+0x1a0>
     b2e:	00 e2       	ldi	r16, 0x20	; 32
     b30:	05 c0       	rjmp	.+10     	; 0xb3c <vfprintf+0x1a2>
     b32:	0d e2       	ldi	r16, 0x2D	; 45
     b34:	03 c0       	rjmp	.+6      	; 0xb3c <vfprintf+0x1a2>
     b36:	0b e2       	ldi	r16, 0x2B	; 43
     b38:	01 c0       	rjmp	.+2      	; 0xb3c <vfprintf+0x1a2>
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	8c 85       	ldd	r24, Y+12	; 0x0c
     b3e:	8c 70       	andi	r24, 0x0C	; 12
     b40:	19 f0       	breq	.+6      	; 0xb48 <vfprintf+0x1ae>
     b42:	01 11       	cpse	r16, r1
     b44:	5a c2       	rjmp	.+1204   	; 0xffa <vfprintf+0x660>
     b46:	9b c2       	rjmp	.+1334   	; 0x107e <vfprintf+0x6e4>
     b48:	97 fe       	sbrs	r9, 7
     b4a:	10 c0       	rjmp	.+32     	; 0xb6c <vfprintf+0x1d2>
     b4c:	4c 0c       	add	r4, r12
     b4e:	fc 85       	ldd	r31, Y+12	; 0x0c
     b50:	f4 ff       	sbrs	r31, 4
     b52:	04 c0       	rjmp	.+8      	; 0xb5c <vfprintf+0x1c2>
     b54:	8a 81       	ldd	r24, Y+2	; 0x02
     b56:	81 33       	cpi	r24, 0x31	; 49
     b58:	09 f4       	brne	.+2      	; 0xb5c <vfprintf+0x1c2>
     b5a:	4a 94       	dec	r4
     b5c:	14 14       	cp	r1, r4
     b5e:	74 f5       	brge	.+92     	; 0xbbc <vfprintf+0x222>
     b60:	28 e0       	ldi	r18, 0x08	; 8
     b62:	24 15       	cp	r18, r4
     b64:	78 f5       	brcc	.+94     	; 0xbc4 <vfprintf+0x22a>
     b66:	88 e0       	ldi	r24, 0x08	; 8
     b68:	48 2e       	mov	r4, r24
     b6a:	2c c0       	rjmp	.+88     	; 0xbc4 <vfprintf+0x22a>
     b6c:	96 fc       	sbrc	r9, 6
     b6e:	2a c0       	rjmp	.+84     	; 0xbc4 <vfprintf+0x22a>
     b70:	81 2f       	mov	r24, r17
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	8c 15       	cp	r24, r12
     b76:	9d 05       	cpc	r25, r13
     b78:	9c f0       	brlt	.+38     	; 0xba0 <vfprintf+0x206>
     b7a:	3c ef       	ldi	r19, 0xFC	; 252
     b7c:	c3 16       	cp	r12, r19
     b7e:	3f ef       	ldi	r19, 0xFF	; 255
     b80:	d3 06       	cpc	r13, r19
     b82:	74 f0       	brlt	.+28     	; 0xba0 <vfprintf+0x206>
     b84:	89 2d       	mov	r24, r9
     b86:	80 68       	ori	r24, 0x80	; 128
     b88:	98 2e       	mov	r9, r24
     b8a:	0a c0       	rjmp	.+20     	; 0xba0 <vfprintf+0x206>
     b8c:	e2 e0       	ldi	r30, 0x02	; 2
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	ec 0f       	add	r30, r28
     b92:	fd 1f       	adc	r31, r29
     b94:	e1 0f       	add	r30, r17
     b96:	f1 1d       	adc	r31, r1
     b98:	80 81       	ld	r24, Z
     b9a:	80 33       	cpi	r24, 0x30	; 48
     b9c:	19 f4       	brne	.+6      	; 0xba4 <vfprintf+0x20a>
     b9e:	11 50       	subi	r17, 0x01	; 1
     ba0:	11 11       	cpse	r17, r1
     ba2:	f4 cf       	rjmp	.-24     	; 0xb8c <vfprintf+0x1f2>
     ba4:	97 fe       	sbrs	r9, 7
     ba6:	0e c0       	rjmp	.+28     	; 0xbc4 <vfprintf+0x22a>
     ba8:	44 24       	eor	r4, r4
     baa:	43 94       	inc	r4
     bac:	41 0e       	add	r4, r17
     bae:	81 2f       	mov	r24, r17
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	c8 16       	cp	r12, r24
     bb4:	d9 06       	cpc	r13, r25
     bb6:	2c f4       	brge	.+10     	; 0xbc2 <vfprintf+0x228>
     bb8:	1c 19       	sub	r17, r12
     bba:	04 c0       	rjmp	.+8      	; 0xbc4 <vfprintf+0x22a>
     bbc:	44 24       	eor	r4, r4
     bbe:	43 94       	inc	r4
     bc0:	01 c0       	rjmp	.+2      	; 0xbc4 <vfprintf+0x22a>
     bc2:	10 e0       	ldi	r17, 0x00	; 0
     bc4:	97 fe       	sbrs	r9, 7
     bc6:	06 c0       	rjmp	.+12     	; 0xbd4 <vfprintf+0x23a>
     bc8:	1c 14       	cp	r1, r12
     bca:	1d 04       	cpc	r1, r13
     bcc:	34 f4       	brge	.+12     	; 0xbda <vfprintf+0x240>
     bce:	c6 01       	movw	r24, r12
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	05 c0       	rjmp	.+10     	; 0xbde <vfprintf+0x244>
     bd4:	85 e0       	ldi	r24, 0x05	; 5
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	02 c0       	rjmp	.+4      	; 0xbde <vfprintf+0x244>
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	01 11       	cpse	r16, r1
     be0:	01 96       	adiw	r24, 0x01	; 1
     be2:	11 23       	and	r17, r17
     be4:	31 f0       	breq	.+12     	; 0xbf2 <vfprintf+0x258>
     be6:	21 2f       	mov	r18, r17
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	2f 5f       	subi	r18, 0xFF	; 255
     bec:	3f 4f       	sbci	r19, 0xFF	; 255
     bee:	82 0f       	add	r24, r18
     bf0:	93 1f       	adc	r25, r19
     bf2:	25 2d       	mov	r18, r5
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	82 17       	cp	r24, r18
     bf8:	93 07       	cpc	r25, r19
     bfa:	14 f4       	brge	.+4      	; 0xc00 <vfprintf+0x266>
     bfc:	58 1a       	sub	r5, r24
     bfe:	01 c0       	rjmp	.+2      	; 0xc02 <vfprintf+0x268>
     c00:	51 2c       	mov	r5, r1
     c02:	89 2d       	mov	r24, r9
     c04:	89 70       	andi	r24, 0x09	; 9
     c06:	49 f4       	brne	.+18     	; 0xc1a <vfprintf+0x280>
     c08:	55 20       	and	r5, r5
     c0a:	39 f0       	breq	.+14     	; 0xc1a <vfprintf+0x280>
     c0c:	b7 01       	movw	r22, r14
     c0e:	80 e2       	ldi	r24, 0x20	; 32
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     c16:	5a 94       	dec	r5
     c18:	f7 cf       	rjmp	.-18     	; 0xc08 <vfprintf+0x26e>
     c1a:	00 23       	and	r16, r16
     c1c:	29 f0       	breq	.+10     	; 0xc28 <vfprintf+0x28e>
     c1e:	b7 01       	movw	r22, r14
     c20:	80 2f       	mov	r24, r16
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     c28:	93 fc       	sbrc	r9, 3
     c2a:	09 c0       	rjmp	.+18     	; 0xc3e <vfprintf+0x2a4>
     c2c:	55 20       	and	r5, r5
     c2e:	39 f0       	breq	.+14     	; 0xc3e <vfprintf+0x2a4>
     c30:	b7 01       	movw	r22, r14
     c32:	80 e3       	ldi	r24, 0x30	; 48
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     c3a:	5a 94       	dec	r5
     c3c:	f7 cf       	rjmp	.-18     	; 0xc2c <vfprintf+0x292>
     c3e:	97 fe       	sbrs	r9, 7
     c40:	4c c0       	rjmp	.+152    	; 0xcda <vfprintf+0x340>
     c42:	46 01       	movw	r8, r12
     c44:	d7 fe       	sbrs	r13, 7
     c46:	02 c0       	rjmp	.+4      	; 0xc4c <vfprintf+0x2b2>
     c48:	81 2c       	mov	r8, r1
     c4a:	91 2c       	mov	r9, r1
     c4c:	c6 01       	movw	r24, r12
     c4e:	88 19       	sub	r24, r8
     c50:	99 09       	sbc	r25, r9
     c52:	f3 01       	movw	r30, r6
     c54:	e8 0f       	add	r30, r24
     c56:	f9 1f       	adc	r31, r25
     c58:	fe 87       	std	Y+14, r31	; 0x0e
     c5a:	ed 87       	std	Y+13, r30	; 0x0d
     c5c:	96 01       	movw	r18, r12
     c5e:	24 19       	sub	r18, r4
     c60:	31 09       	sbc	r19, r1
     c62:	38 8b       	std	Y+16, r19	; 0x10
     c64:	2f 87       	std	Y+15, r18	; 0x0f
     c66:	01 2f       	mov	r16, r17
     c68:	10 e0       	ldi	r17, 0x00	; 0
     c6a:	11 95       	neg	r17
     c6c:	01 95       	neg	r16
     c6e:	11 09       	sbc	r17, r1
     c70:	3f ef       	ldi	r19, 0xFF	; 255
     c72:	83 16       	cp	r8, r19
     c74:	93 06       	cpc	r9, r19
     c76:	29 f4       	brne	.+10     	; 0xc82 <vfprintf+0x2e8>
     c78:	b7 01       	movw	r22, r14
     c7a:	8e e2       	ldi	r24, 0x2E	; 46
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     c82:	c8 14       	cp	r12, r8
     c84:	d9 04       	cpc	r13, r9
     c86:	4c f0       	brlt	.+18     	; 0xc9a <vfprintf+0x300>
     c88:	8f 85       	ldd	r24, Y+15	; 0x0f
     c8a:	98 89       	ldd	r25, Y+16	; 0x10
     c8c:	88 15       	cp	r24, r8
     c8e:	99 05       	cpc	r25, r9
     c90:	24 f4       	brge	.+8      	; 0xc9a <vfprintf+0x300>
     c92:	ed 85       	ldd	r30, Y+13	; 0x0d
     c94:	fe 85       	ldd	r31, Y+14	; 0x0e
     c96:	81 81       	ldd	r24, Z+1	; 0x01
     c98:	01 c0       	rjmp	.+2      	; 0xc9c <vfprintf+0x302>
     c9a:	80 e3       	ldi	r24, 0x30	; 48
     c9c:	f1 e0       	ldi	r31, 0x01	; 1
     c9e:	8f 1a       	sub	r8, r31
     ca0:	91 08       	sbc	r9, r1
     ca2:	2d 85       	ldd	r18, Y+13	; 0x0d
     ca4:	3e 85       	ldd	r19, Y+14	; 0x0e
     ca6:	2f 5f       	subi	r18, 0xFF	; 255
     ca8:	3f 4f       	sbci	r19, 0xFF	; 255
     caa:	3e 87       	std	Y+14, r19	; 0x0e
     cac:	2d 87       	std	Y+13, r18	; 0x0d
     cae:	80 16       	cp	r8, r16
     cb0:	91 06       	cpc	r9, r17
     cb2:	2c f0       	brlt	.+10     	; 0xcbe <vfprintf+0x324>
     cb4:	b7 01       	movw	r22, r14
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     cbc:	d9 cf       	rjmp	.-78     	; 0xc70 <vfprintf+0x2d6>
     cbe:	c8 14       	cp	r12, r8
     cc0:	d9 04       	cpc	r13, r9
     cc2:	41 f4       	brne	.+16     	; 0xcd4 <vfprintf+0x33a>
     cc4:	9a 81       	ldd	r25, Y+2	; 0x02
     cc6:	96 33       	cpi	r25, 0x36	; 54
     cc8:	20 f4       	brcc	.+8      	; 0xcd2 <vfprintf+0x338>
     cca:	95 33       	cpi	r25, 0x35	; 53
     ccc:	19 f4       	brne	.+6      	; 0xcd4 <vfprintf+0x33a>
     cce:	3c 85       	ldd	r19, Y+12	; 0x0c
     cd0:	34 ff       	sbrs	r19, 4
     cd2:	81 e3       	ldi	r24, 0x31	; 49
     cd4:	b7 01       	movw	r22, r14
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	4e c0       	rjmp	.+156    	; 0xd76 <vfprintf+0x3dc>
     cda:	8a 81       	ldd	r24, Y+2	; 0x02
     cdc:	81 33       	cpi	r24, 0x31	; 49
     cde:	19 f0       	breq	.+6      	; 0xce6 <vfprintf+0x34c>
     ce0:	9c 85       	ldd	r25, Y+12	; 0x0c
     ce2:	9f 7e       	andi	r25, 0xEF	; 239
     ce4:	9c 87       	std	Y+12, r25	; 0x0c
     ce6:	b7 01       	movw	r22, r14
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     cee:	11 11       	cpse	r17, r1
     cf0:	05 c0       	rjmp	.+10     	; 0xcfc <vfprintf+0x362>
     cf2:	94 fc       	sbrc	r9, 4
     cf4:	18 c0       	rjmp	.+48     	; 0xd26 <vfprintf+0x38c>
     cf6:	85 e6       	ldi	r24, 0x65	; 101
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	17 c0       	rjmp	.+46     	; 0xd2a <vfprintf+0x390>
     cfc:	b7 01       	movw	r22, r14
     cfe:	8e e2       	ldi	r24, 0x2E	; 46
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     d06:	1e 5f       	subi	r17, 0xFE	; 254
     d08:	82 e0       	ldi	r24, 0x02	; 2
     d0a:	01 e0       	ldi	r16, 0x01	; 1
     d0c:	08 0f       	add	r16, r24
     d0e:	f3 01       	movw	r30, r6
     d10:	e8 0f       	add	r30, r24
     d12:	f1 1d       	adc	r31, r1
     d14:	80 81       	ld	r24, Z
     d16:	b7 01       	movw	r22, r14
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     d1e:	80 2f       	mov	r24, r16
     d20:	01 13       	cpse	r16, r17
     d22:	f3 cf       	rjmp	.-26     	; 0xd0a <vfprintf+0x370>
     d24:	e6 cf       	rjmp	.-52     	; 0xcf2 <vfprintf+0x358>
     d26:	85 e4       	ldi	r24, 0x45	; 69
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	b7 01       	movw	r22, r14
     d2c:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     d30:	d7 fc       	sbrc	r13, 7
     d32:	06 c0       	rjmp	.+12     	; 0xd40 <vfprintf+0x3a6>
     d34:	c1 14       	cp	r12, r1
     d36:	d1 04       	cpc	r13, r1
     d38:	41 f4       	brne	.+16     	; 0xd4a <vfprintf+0x3b0>
     d3a:	ec 85       	ldd	r30, Y+12	; 0x0c
     d3c:	e4 ff       	sbrs	r30, 4
     d3e:	05 c0       	rjmp	.+10     	; 0xd4a <vfprintf+0x3b0>
     d40:	d1 94       	neg	r13
     d42:	c1 94       	neg	r12
     d44:	d1 08       	sbc	r13, r1
     d46:	8d e2       	ldi	r24, 0x2D	; 45
     d48:	01 c0       	rjmp	.+2      	; 0xd4c <vfprintf+0x3b2>
     d4a:	8b e2       	ldi	r24, 0x2B	; 43
     d4c:	b7 01       	movw	r22, r14
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     d54:	80 e3       	ldi	r24, 0x30	; 48
     d56:	2a e0       	ldi	r18, 0x0A	; 10
     d58:	c2 16       	cp	r12, r18
     d5a:	d1 04       	cpc	r13, r1
     d5c:	2c f0       	brlt	.+10     	; 0xd68 <vfprintf+0x3ce>
     d5e:	8f 5f       	subi	r24, 0xFF	; 255
     d60:	fa e0       	ldi	r31, 0x0A	; 10
     d62:	cf 1a       	sub	r12, r31
     d64:	d1 08       	sbc	r13, r1
     d66:	f7 cf       	rjmp	.-18     	; 0xd56 <vfprintf+0x3bc>
     d68:	b7 01       	movw	r22, r14
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     d70:	b7 01       	movw	r22, r14
     d72:	c6 01       	movw	r24, r12
     d74:	c0 96       	adiw	r24, 0x30	; 48
     d76:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     d7a:	54 c1       	rjmp	.+680    	; 0x1024 <vfprintf+0x68a>
     d7c:	83 36       	cpi	r24, 0x63	; 99
     d7e:	31 f0       	breq	.+12     	; 0xd8c <vfprintf+0x3f2>
     d80:	83 37       	cpi	r24, 0x73	; 115
     d82:	79 f0       	breq	.+30     	; 0xda2 <vfprintf+0x408>
     d84:	83 35       	cpi	r24, 0x53	; 83
     d86:	09 f0       	breq	.+2      	; 0xd8a <vfprintf+0x3f0>
     d88:	56 c0       	rjmp	.+172    	; 0xe36 <vfprintf+0x49c>
     d8a:	20 c0       	rjmp	.+64     	; 0xdcc <vfprintf+0x432>
     d8c:	56 01       	movw	r10, r12
     d8e:	32 e0       	ldi	r19, 0x02	; 2
     d90:	a3 0e       	add	r10, r19
     d92:	b1 1c       	adc	r11, r1
     d94:	f6 01       	movw	r30, r12
     d96:	80 81       	ld	r24, Z
     d98:	89 83       	std	Y+1, r24	; 0x01
     d9a:	01 e0       	ldi	r16, 0x01	; 1
     d9c:	10 e0       	ldi	r17, 0x00	; 0
     d9e:	63 01       	movw	r12, r6
     da0:	12 c0       	rjmp	.+36     	; 0xdc6 <vfprintf+0x42c>
     da2:	56 01       	movw	r10, r12
     da4:	f2 e0       	ldi	r31, 0x02	; 2
     da6:	af 0e       	add	r10, r31
     da8:	b1 1c       	adc	r11, r1
     daa:	f6 01       	movw	r30, r12
     dac:	c0 80       	ld	r12, Z
     dae:	d1 80       	ldd	r13, Z+1	; 0x01
     db0:	96 fe       	sbrs	r9, 6
     db2:	03 c0       	rjmp	.+6      	; 0xdba <vfprintf+0x420>
     db4:	61 2f       	mov	r22, r17
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <vfprintf+0x424>
     dba:	6f ef       	ldi	r22, 0xFF	; 255
     dbc:	7f ef       	ldi	r23, 0xFF	; 255
     dbe:	c6 01       	movw	r24, r12
     dc0:	0e 94 8c 09 	call	0x1318	; 0x1318 <strnlen>
     dc4:	8c 01       	movw	r16, r24
     dc6:	f9 2d       	mov	r31, r9
     dc8:	ff 77       	andi	r31, 0x7F	; 127
     dca:	14 c0       	rjmp	.+40     	; 0xdf4 <vfprintf+0x45a>
     dcc:	56 01       	movw	r10, r12
     dce:	22 e0       	ldi	r18, 0x02	; 2
     dd0:	a2 0e       	add	r10, r18
     dd2:	b1 1c       	adc	r11, r1
     dd4:	f6 01       	movw	r30, r12
     dd6:	c0 80       	ld	r12, Z
     dd8:	d1 80       	ldd	r13, Z+1	; 0x01
     dda:	96 fe       	sbrs	r9, 6
     ddc:	03 c0       	rjmp	.+6      	; 0xde4 <vfprintf+0x44a>
     dde:	61 2f       	mov	r22, r17
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <vfprintf+0x44e>
     de4:	6f ef       	ldi	r22, 0xFF	; 255
     de6:	7f ef       	ldi	r23, 0xFF	; 255
     de8:	c6 01       	movw	r24, r12
     dea:	0e 94 81 09 	call	0x1302	; 0x1302 <strnlen_P>
     dee:	8c 01       	movw	r16, r24
     df0:	f9 2d       	mov	r31, r9
     df2:	f0 68       	ori	r31, 0x80	; 128
     df4:	9f 2e       	mov	r9, r31
     df6:	f3 fd       	sbrc	r31, 3
     df8:	1a c0       	rjmp	.+52     	; 0xe2e <vfprintf+0x494>
     dfa:	85 2d       	mov	r24, r5
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	08 17       	cp	r16, r24
     e00:	19 07       	cpc	r17, r25
     e02:	a8 f4       	brcc	.+42     	; 0xe2e <vfprintf+0x494>
     e04:	b7 01       	movw	r22, r14
     e06:	80 e2       	ldi	r24, 0x20	; 32
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     e0e:	5a 94       	dec	r5
     e10:	f4 cf       	rjmp	.-24     	; 0xdfa <vfprintf+0x460>
     e12:	f6 01       	movw	r30, r12
     e14:	97 fc       	sbrc	r9, 7
     e16:	85 91       	lpm	r24, Z+
     e18:	97 fe       	sbrs	r9, 7
     e1a:	81 91       	ld	r24, Z+
     e1c:	6f 01       	movw	r12, r30
     e1e:	b7 01       	movw	r22, r14
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     e26:	51 10       	cpse	r5, r1
     e28:	5a 94       	dec	r5
     e2a:	01 50       	subi	r16, 0x01	; 1
     e2c:	11 09       	sbc	r17, r1
     e2e:	01 15       	cp	r16, r1
     e30:	11 05       	cpc	r17, r1
     e32:	79 f7       	brne	.-34     	; 0xe12 <vfprintf+0x478>
     e34:	f7 c0       	rjmp	.+494    	; 0x1024 <vfprintf+0x68a>
     e36:	84 36       	cpi	r24, 0x64	; 100
     e38:	11 f0       	breq	.+4      	; 0xe3e <vfprintf+0x4a4>
     e3a:	89 36       	cpi	r24, 0x69	; 105
     e3c:	61 f5       	brne	.+88     	; 0xe96 <vfprintf+0x4fc>
     e3e:	56 01       	movw	r10, r12
     e40:	97 fe       	sbrs	r9, 7
     e42:	09 c0       	rjmp	.+18     	; 0xe56 <vfprintf+0x4bc>
     e44:	24 e0       	ldi	r18, 0x04	; 4
     e46:	a2 0e       	add	r10, r18
     e48:	b1 1c       	adc	r11, r1
     e4a:	f6 01       	movw	r30, r12
     e4c:	60 81       	ld	r22, Z
     e4e:	71 81       	ldd	r23, Z+1	; 0x01
     e50:	82 81       	ldd	r24, Z+2	; 0x02
     e52:	93 81       	ldd	r25, Z+3	; 0x03
     e54:	0a c0       	rjmp	.+20     	; 0xe6a <vfprintf+0x4d0>
     e56:	f2 e0       	ldi	r31, 0x02	; 2
     e58:	af 0e       	add	r10, r31
     e5a:	b1 1c       	adc	r11, r1
     e5c:	f6 01       	movw	r30, r12
     e5e:	60 81       	ld	r22, Z
     e60:	71 81       	ldd	r23, Z+1	; 0x01
     e62:	07 2e       	mov	r0, r23
     e64:	00 0c       	add	r0, r0
     e66:	88 0b       	sbc	r24, r24
     e68:	99 0b       	sbc	r25, r25
     e6a:	f9 2d       	mov	r31, r9
     e6c:	ff 76       	andi	r31, 0x6F	; 111
     e6e:	9f 2e       	mov	r9, r31
     e70:	97 ff       	sbrs	r25, 7
     e72:	09 c0       	rjmp	.+18     	; 0xe86 <vfprintf+0x4ec>
     e74:	90 95       	com	r25
     e76:	80 95       	com	r24
     e78:	70 95       	com	r23
     e7a:	61 95       	neg	r22
     e7c:	7f 4f       	sbci	r23, 0xFF	; 255
     e7e:	8f 4f       	sbci	r24, 0xFF	; 255
     e80:	9f 4f       	sbci	r25, 0xFF	; 255
     e82:	f0 68       	ori	r31, 0x80	; 128
     e84:	9f 2e       	mov	r9, r31
     e86:	2a e0       	ldi	r18, 0x0A	; 10
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	a3 01       	movw	r20, r6
     e8c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__ultoa_invert>
     e90:	c8 2e       	mov	r12, r24
     e92:	c6 18       	sub	r12, r6
     e94:	3f c0       	rjmp	.+126    	; 0xf14 <vfprintf+0x57a>
     e96:	09 2d       	mov	r16, r9
     e98:	85 37       	cpi	r24, 0x75	; 117
     e9a:	21 f4       	brne	.+8      	; 0xea4 <vfprintf+0x50a>
     e9c:	0f 7e       	andi	r16, 0xEF	; 239
     e9e:	2a e0       	ldi	r18, 0x0A	; 10
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	1d c0       	rjmp	.+58     	; 0xede <vfprintf+0x544>
     ea4:	09 7f       	andi	r16, 0xF9	; 249
     ea6:	8f 36       	cpi	r24, 0x6F	; 111
     ea8:	91 f0       	breq	.+36     	; 0xece <vfprintf+0x534>
     eaa:	18 f4       	brcc	.+6      	; 0xeb2 <vfprintf+0x518>
     eac:	88 35       	cpi	r24, 0x58	; 88
     eae:	59 f0       	breq	.+22     	; 0xec6 <vfprintf+0x52c>
     eb0:	c3 c0       	rjmp	.+390    	; 0x1038 <vfprintf+0x69e>
     eb2:	80 37       	cpi	r24, 0x70	; 112
     eb4:	19 f0       	breq	.+6      	; 0xebc <vfprintf+0x522>
     eb6:	88 37       	cpi	r24, 0x78	; 120
     eb8:	11 f0       	breq	.+4      	; 0xebe <vfprintf+0x524>
     eba:	be c0       	rjmp	.+380    	; 0x1038 <vfprintf+0x69e>
     ebc:	00 61       	ori	r16, 0x10	; 16
     ebe:	04 ff       	sbrs	r16, 4
     ec0:	09 c0       	rjmp	.+18     	; 0xed4 <vfprintf+0x53a>
     ec2:	04 60       	ori	r16, 0x04	; 4
     ec4:	07 c0       	rjmp	.+14     	; 0xed4 <vfprintf+0x53a>
     ec6:	94 fe       	sbrs	r9, 4
     ec8:	08 c0       	rjmp	.+16     	; 0xeda <vfprintf+0x540>
     eca:	06 60       	ori	r16, 0x06	; 6
     ecc:	06 c0       	rjmp	.+12     	; 0xeda <vfprintf+0x540>
     ece:	28 e0       	ldi	r18, 0x08	; 8
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	05 c0       	rjmp	.+10     	; 0xede <vfprintf+0x544>
     ed4:	20 e1       	ldi	r18, 0x10	; 16
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	02 c0       	rjmp	.+4      	; 0xede <vfprintf+0x544>
     eda:	20 e1       	ldi	r18, 0x10	; 16
     edc:	32 e0       	ldi	r19, 0x02	; 2
     ede:	56 01       	movw	r10, r12
     ee0:	07 ff       	sbrs	r16, 7
     ee2:	09 c0       	rjmp	.+18     	; 0xef6 <vfprintf+0x55c>
     ee4:	84 e0       	ldi	r24, 0x04	; 4
     ee6:	a8 0e       	add	r10, r24
     ee8:	b1 1c       	adc	r11, r1
     eea:	f6 01       	movw	r30, r12
     eec:	60 81       	ld	r22, Z
     eee:	71 81       	ldd	r23, Z+1	; 0x01
     ef0:	82 81       	ldd	r24, Z+2	; 0x02
     ef2:	93 81       	ldd	r25, Z+3	; 0x03
     ef4:	08 c0       	rjmp	.+16     	; 0xf06 <vfprintf+0x56c>
     ef6:	f2 e0       	ldi	r31, 0x02	; 2
     ef8:	af 0e       	add	r10, r31
     efa:	b1 1c       	adc	r11, r1
     efc:	f6 01       	movw	r30, r12
     efe:	60 81       	ld	r22, Z
     f00:	71 81       	ldd	r23, Z+1	; 0x01
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	a3 01       	movw	r20, r6
     f08:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__ultoa_invert>
     f0c:	c8 2e       	mov	r12, r24
     f0e:	c6 18       	sub	r12, r6
     f10:	0f 77       	andi	r16, 0x7F	; 127
     f12:	90 2e       	mov	r9, r16
     f14:	96 fe       	sbrs	r9, 6
     f16:	0b c0       	rjmp	.+22     	; 0xf2e <vfprintf+0x594>
     f18:	09 2d       	mov	r16, r9
     f1a:	0e 7f       	andi	r16, 0xFE	; 254
     f1c:	c1 16       	cp	r12, r17
     f1e:	50 f4       	brcc	.+20     	; 0xf34 <vfprintf+0x59a>
     f20:	94 fe       	sbrs	r9, 4
     f22:	0a c0       	rjmp	.+20     	; 0xf38 <vfprintf+0x59e>
     f24:	92 fc       	sbrc	r9, 2
     f26:	08 c0       	rjmp	.+16     	; 0xf38 <vfprintf+0x59e>
     f28:	09 2d       	mov	r16, r9
     f2a:	0e 7e       	andi	r16, 0xEE	; 238
     f2c:	05 c0       	rjmp	.+10     	; 0xf38 <vfprintf+0x59e>
     f2e:	dc 2c       	mov	r13, r12
     f30:	09 2d       	mov	r16, r9
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <vfprintf+0x5a0>
     f34:	dc 2c       	mov	r13, r12
     f36:	01 c0       	rjmp	.+2      	; 0xf3a <vfprintf+0x5a0>
     f38:	d1 2e       	mov	r13, r17
     f3a:	04 ff       	sbrs	r16, 4
     f3c:	0d c0       	rjmp	.+26     	; 0xf58 <vfprintf+0x5be>
     f3e:	fe 01       	movw	r30, r28
     f40:	ec 0d       	add	r30, r12
     f42:	f1 1d       	adc	r31, r1
     f44:	80 81       	ld	r24, Z
     f46:	80 33       	cpi	r24, 0x30	; 48
     f48:	11 f4       	brne	.+4      	; 0xf4e <vfprintf+0x5b4>
     f4a:	09 7e       	andi	r16, 0xE9	; 233
     f4c:	09 c0       	rjmp	.+18     	; 0xf60 <vfprintf+0x5c6>
     f4e:	02 ff       	sbrs	r16, 2
     f50:	06 c0       	rjmp	.+12     	; 0xf5e <vfprintf+0x5c4>
     f52:	d3 94       	inc	r13
     f54:	d3 94       	inc	r13
     f56:	04 c0       	rjmp	.+8      	; 0xf60 <vfprintf+0x5c6>
     f58:	80 2f       	mov	r24, r16
     f5a:	86 78       	andi	r24, 0x86	; 134
     f5c:	09 f0       	breq	.+2      	; 0xf60 <vfprintf+0x5c6>
     f5e:	d3 94       	inc	r13
     f60:	03 fd       	sbrc	r16, 3
     f62:	11 c0       	rjmp	.+34     	; 0xf86 <vfprintf+0x5ec>
     f64:	00 ff       	sbrs	r16, 0
     f66:	06 c0       	rjmp	.+12     	; 0xf74 <vfprintf+0x5da>
     f68:	1c 2d       	mov	r17, r12
     f6a:	d5 14       	cp	r13, r5
     f6c:	80 f4       	brcc	.+32     	; 0xf8e <vfprintf+0x5f4>
     f6e:	15 0d       	add	r17, r5
     f70:	1d 19       	sub	r17, r13
     f72:	0d c0       	rjmp	.+26     	; 0xf8e <vfprintf+0x5f4>
     f74:	d5 14       	cp	r13, r5
     f76:	58 f4       	brcc	.+22     	; 0xf8e <vfprintf+0x5f4>
     f78:	b7 01       	movw	r22, r14
     f7a:	80 e2       	ldi	r24, 0x20	; 32
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     f82:	d3 94       	inc	r13
     f84:	f7 cf       	rjmp	.-18     	; 0xf74 <vfprintf+0x5da>
     f86:	d5 14       	cp	r13, r5
     f88:	10 f4       	brcc	.+4      	; 0xf8e <vfprintf+0x5f4>
     f8a:	5d 18       	sub	r5, r13
     f8c:	01 c0       	rjmp	.+2      	; 0xf90 <vfprintf+0x5f6>
     f8e:	51 2c       	mov	r5, r1
     f90:	04 ff       	sbrs	r16, 4
     f92:	10 c0       	rjmp	.+32     	; 0xfb4 <vfprintf+0x61a>
     f94:	b7 01       	movw	r22, r14
     f96:	80 e3       	ldi	r24, 0x30	; 48
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     f9e:	02 ff       	sbrs	r16, 2
     fa0:	17 c0       	rjmp	.+46     	; 0xfd0 <vfprintf+0x636>
     fa2:	01 fd       	sbrc	r16, 1
     fa4:	03 c0       	rjmp	.+6      	; 0xfac <vfprintf+0x612>
     fa6:	88 e7       	ldi	r24, 0x78	; 120
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <vfprintf+0x616>
     fac:	88 e5       	ldi	r24, 0x58	; 88
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	b7 01       	movw	r22, r14
     fb2:	0c c0       	rjmp	.+24     	; 0xfcc <vfprintf+0x632>
     fb4:	80 2f       	mov	r24, r16
     fb6:	86 78       	andi	r24, 0x86	; 134
     fb8:	59 f0       	breq	.+22     	; 0xfd0 <vfprintf+0x636>
     fba:	01 ff       	sbrs	r16, 1
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <vfprintf+0x628>
     fbe:	8b e2       	ldi	r24, 0x2B	; 43
     fc0:	01 c0       	rjmp	.+2      	; 0xfc4 <vfprintf+0x62a>
     fc2:	80 e2       	ldi	r24, 0x20	; 32
     fc4:	07 fd       	sbrc	r16, 7
     fc6:	8d e2       	ldi	r24, 0x2D	; 45
     fc8:	b7 01       	movw	r22, r14
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     fd0:	c1 16       	cp	r12, r17
     fd2:	38 f4       	brcc	.+14     	; 0xfe2 <vfprintf+0x648>
     fd4:	b7 01       	movw	r22, r14
     fd6:	80 e3       	ldi	r24, 0x30	; 48
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     fde:	11 50       	subi	r17, 0x01	; 1
     fe0:	f7 cf       	rjmp	.-18     	; 0xfd0 <vfprintf+0x636>
     fe2:	ca 94       	dec	r12
     fe4:	f3 01       	movw	r30, r6
     fe6:	ec 0d       	add	r30, r12
     fe8:	f1 1d       	adc	r31, r1
     fea:	80 81       	ld	r24, Z
     fec:	b7 01       	movw	r22, r14
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
     ff4:	c1 10       	cpse	r12, r1
     ff6:	f5 cf       	rjmp	.-22     	; 0xfe2 <vfprintf+0x648>
     ff8:	15 c0       	rjmp	.+42     	; 0x1024 <vfprintf+0x68a>
     ffa:	f4 e0       	ldi	r31, 0x04	; 4
     ffc:	f5 15       	cp	r31, r5
     ffe:	60 f5       	brcc	.+88     	; 0x1058 <vfprintf+0x6be>
    1000:	84 e0       	ldi	r24, 0x04	; 4
    1002:	58 1a       	sub	r5, r24
    1004:	93 fe       	sbrs	r9, 3
    1006:	1f c0       	rjmp	.+62     	; 0x1046 <vfprintf+0x6ac>
    1008:	01 11       	cpse	r16, r1
    100a:	27 c0       	rjmp	.+78     	; 0x105a <vfprintf+0x6c0>
    100c:	2c 85       	ldd	r18, Y+12	; 0x0c
    100e:	23 ff       	sbrs	r18, 3
    1010:	2a c0       	rjmp	.+84     	; 0x1066 <vfprintf+0x6cc>
    1012:	08 e7       	ldi	r16, 0x78	; 120
    1014:	10 e0       	ldi	r17, 0x00	; 0
    1016:	39 2d       	mov	r19, r9
    1018:	30 71       	andi	r19, 0x10	; 16
    101a:	93 2e       	mov	r9, r19
    101c:	f8 01       	movw	r30, r16
    101e:	84 91       	lpm	r24, Z
    1020:	81 11       	cpse	r24, r1
    1022:	24 c0       	rjmp	.+72     	; 0x106c <vfprintf+0x6d2>
    1024:	55 20       	and	r5, r5
    1026:	09 f4       	brne	.+2      	; 0x102a <vfprintf+0x690>
    1028:	e4 cc       	rjmp	.-1592   	; 0x9f2 <vfprintf+0x58>
    102a:	b7 01       	movw	r22, r14
    102c:	80 e2       	ldi	r24, 0x20	; 32
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
    1034:	5a 94       	dec	r5
    1036:	f6 cf       	rjmp	.-20     	; 0x1024 <vfprintf+0x68a>
    1038:	f7 01       	movw	r30, r14
    103a:	86 81       	ldd	r24, Z+6	; 0x06
    103c:	97 81       	ldd	r25, Z+7	; 0x07
    103e:	26 c0       	rjmp	.+76     	; 0x108c <vfprintf+0x6f2>
    1040:	8f ef       	ldi	r24, 0xFF	; 255
    1042:	9f ef       	ldi	r25, 0xFF	; 255
    1044:	23 c0       	rjmp	.+70     	; 0x108c <vfprintf+0x6f2>
    1046:	b7 01       	movw	r22, r14
    1048:	80 e2       	ldi	r24, 0x20	; 32
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
    1050:	5a 94       	dec	r5
    1052:	51 10       	cpse	r5, r1
    1054:	f8 cf       	rjmp	.-16     	; 0x1046 <vfprintf+0x6ac>
    1056:	d8 cf       	rjmp	.-80     	; 0x1008 <vfprintf+0x66e>
    1058:	51 2c       	mov	r5, r1
    105a:	b7 01       	movw	r22, r14
    105c:	80 2f       	mov	r24, r16
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
    1064:	d3 cf       	rjmp	.-90     	; 0x100c <vfprintf+0x672>
    1066:	0c e7       	ldi	r16, 0x7C	; 124
    1068:	10 e0       	ldi	r17, 0x00	; 0
    106a:	d5 cf       	rjmp	.-86     	; 0x1016 <vfprintf+0x67c>
    106c:	91 10       	cpse	r9, r1
    106e:	80 52       	subi	r24, 0x20	; 32
    1070:	b7 01       	movw	r22, r14
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	0e 94 97 09 	call	0x132e	; 0x132e <fputc>
    1078:	0f 5f       	subi	r16, 0xFF	; 255
    107a:	1f 4f       	sbci	r17, 0xFF	; 255
    107c:	cf cf       	rjmp	.-98     	; 0x101c <vfprintf+0x682>
    107e:	23 e0       	ldi	r18, 0x03	; 3
    1080:	25 15       	cp	r18, r5
    1082:	10 f4       	brcc	.+4      	; 0x1088 <vfprintf+0x6ee>
    1084:	83 e0       	ldi	r24, 0x03	; 3
    1086:	bd cf       	rjmp	.-134    	; 0x1002 <vfprintf+0x668>
    1088:	51 2c       	mov	r5, r1
    108a:	c0 cf       	rjmp	.-128    	; 0x100c <vfprintf+0x672>
    108c:	60 96       	adiw	r28, 0x10	; 16
    108e:	e2 e1       	ldi	r30, 0x12	; 18
    1090:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__epilogue_restores__>

00001094 <__udivmodsi4>:
    1094:	a1 e2       	ldi	r26, 0x21	; 33
    1096:	1a 2e       	mov	r1, r26
    1098:	aa 1b       	sub	r26, r26
    109a:	bb 1b       	sub	r27, r27
    109c:	fd 01       	movw	r30, r26
    109e:	0d c0       	rjmp	.+26     	; 0x10ba <__udivmodsi4_ep>

000010a0 <__udivmodsi4_loop>:
    10a0:	aa 1f       	adc	r26, r26
    10a2:	bb 1f       	adc	r27, r27
    10a4:	ee 1f       	adc	r30, r30
    10a6:	ff 1f       	adc	r31, r31
    10a8:	a2 17       	cp	r26, r18
    10aa:	b3 07       	cpc	r27, r19
    10ac:	e4 07       	cpc	r30, r20
    10ae:	f5 07       	cpc	r31, r21
    10b0:	20 f0       	brcs	.+8      	; 0x10ba <__udivmodsi4_ep>
    10b2:	a2 1b       	sub	r26, r18
    10b4:	b3 0b       	sbc	r27, r19
    10b6:	e4 0b       	sbc	r30, r20
    10b8:	f5 0b       	sbc	r31, r21

000010ba <__udivmodsi4_ep>:
    10ba:	66 1f       	adc	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	88 1f       	adc	r24, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	1a 94       	dec	r1
    10c4:	69 f7       	brne	.-38     	; 0x10a0 <__udivmodsi4_loop>
    10c6:	60 95       	com	r22
    10c8:	70 95       	com	r23
    10ca:	80 95       	com	r24
    10cc:	90 95       	com	r25
    10ce:	9b 01       	movw	r18, r22
    10d0:	ac 01       	movw	r20, r24
    10d2:	bd 01       	movw	r22, r26
    10d4:	cf 01       	movw	r24, r30
    10d6:	08 95       	ret

000010d8 <__tablejump2__>:
    10d8:	ee 0f       	add	r30, r30
    10da:	ff 1f       	adc	r31, r31
    10dc:	05 90       	lpm	r0, Z+
    10de:	f4 91       	lpm	r31, Z
    10e0:	e0 2d       	mov	r30, r0
    10e2:	09 94       	ijmp

000010e4 <__prologue_saves__>:
    10e4:	2f 92       	push	r2
    10e6:	3f 92       	push	r3
    10e8:	4f 92       	push	r4
    10ea:	5f 92       	push	r5
    10ec:	6f 92       	push	r6
    10ee:	7f 92       	push	r7
    10f0:	8f 92       	push	r8
    10f2:	9f 92       	push	r9
    10f4:	af 92       	push	r10
    10f6:	bf 92       	push	r11
    10f8:	cf 92       	push	r12
    10fa:	df 92       	push	r13
    10fc:	ef 92       	push	r14
    10fe:	ff 92       	push	r15
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	cd b7       	in	r28, 0x3d	; 61
    110a:	de b7       	in	r29, 0x3e	; 62
    110c:	ca 1b       	sub	r28, r26
    110e:	db 0b       	sbc	r29, r27
    1110:	0f b6       	in	r0, 0x3f	; 63
    1112:	f8 94       	cli
    1114:	de bf       	out	0x3e, r29	; 62
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	cd bf       	out	0x3d, r28	; 61
    111a:	09 94       	ijmp

0000111c <__epilogue_restores__>:
    111c:	2a 88       	ldd	r2, Y+18	; 0x12
    111e:	39 88       	ldd	r3, Y+17	; 0x11
    1120:	48 88       	ldd	r4, Y+16	; 0x10
    1122:	5f 84       	ldd	r5, Y+15	; 0x0f
    1124:	6e 84       	ldd	r6, Y+14	; 0x0e
    1126:	7d 84       	ldd	r7, Y+13	; 0x0d
    1128:	8c 84       	ldd	r8, Y+12	; 0x0c
    112a:	9b 84       	ldd	r9, Y+11	; 0x0b
    112c:	aa 84       	ldd	r10, Y+10	; 0x0a
    112e:	b9 84       	ldd	r11, Y+9	; 0x09
    1130:	c8 84       	ldd	r12, Y+8	; 0x08
    1132:	df 80       	ldd	r13, Y+7	; 0x07
    1134:	ee 80       	ldd	r14, Y+6	; 0x06
    1136:	fd 80       	ldd	r15, Y+5	; 0x05
    1138:	0c 81       	ldd	r16, Y+4	; 0x04
    113a:	1b 81       	ldd	r17, Y+3	; 0x03
    113c:	aa 81       	ldd	r26, Y+2	; 0x02
    113e:	b9 81       	ldd	r27, Y+1	; 0x01
    1140:	ce 0f       	add	r28, r30
    1142:	d1 1d       	adc	r29, r1
    1144:	0f b6       	in	r0, 0x3f	; 63
    1146:	f8 94       	cli
    1148:	de bf       	out	0x3e, r29	; 62
    114a:	0f be       	out	0x3f, r0	; 63
    114c:	cd bf       	out	0x3d, r28	; 61
    114e:	ed 01       	movw	r28, r26
    1150:	08 95       	ret

00001152 <__ftoa_engine>:
    1152:	28 30       	cpi	r18, 0x08	; 8
    1154:	08 f0       	brcs	.+2      	; 0x1158 <__ftoa_engine+0x6>
    1156:	27 e0       	ldi	r18, 0x07	; 7
    1158:	33 27       	eor	r19, r19
    115a:	da 01       	movw	r26, r20
    115c:	99 0f       	add	r25, r25
    115e:	31 1d       	adc	r19, r1
    1160:	87 fd       	sbrc	r24, 7
    1162:	91 60       	ori	r25, 0x01	; 1
    1164:	00 96       	adiw	r24, 0x00	; 0
    1166:	61 05       	cpc	r22, r1
    1168:	71 05       	cpc	r23, r1
    116a:	39 f4       	brne	.+14     	; 0x117a <__ftoa_engine+0x28>
    116c:	32 60       	ori	r19, 0x02	; 2
    116e:	2e 5f       	subi	r18, 0xFE	; 254
    1170:	3d 93       	st	X+, r19
    1172:	30 e3       	ldi	r19, 0x30	; 48
    1174:	2a 95       	dec	r18
    1176:	e1 f7       	brne	.-8      	; 0x1170 <__ftoa_engine+0x1e>
    1178:	08 95       	ret
    117a:	9f 3f       	cpi	r25, 0xFF	; 255
    117c:	30 f0       	brcs	.+12     	; 0x118a <__ftoa_engine+0x38>
    117e:	80 38       	cpi	r24, 0x80	; 128
    1180:	71 05       	cpc	r23, r1
    1182:	61 05       	cpc	r22, r1
    1184:	09 f0       	breq	.+2      	; 0x1188 <__ftoa_engine+0x36>
    1186:	3c 5f       	subi	r19, 0xFC	; 252
    1188:	3c 5f       	subi	r19, 0xFC	; 252
    118a:	3d 93       	st	X+, r19
    118c:	91 30       	cpi	r25, 0x01	; 1
    118e:	08 f0       	brcs	.+2      	; 0x1192 <__ftoa_engine+0x40>
    1190:	80 68       	ori	r24, 0x80	; 128
    1192:	91 1d       	adc	r25, r1
    1194:	df 93       	push	r29
    1196:	cf 93       	push	r28
    1198:	1f 93       	push	r17
    119a:	0f 93       	push	r16
    119c:	ff 92       	push	r15
    119e:	ef 92       	push	r14
    11a0:	19 2f       	mov	r17, r25
    11a2:	98 7f       	andi	r25, 0xF8	; 248
    11a4:	96 95       	lsr	r25
    11a6:	e9 2f       	mov	r30, r25
    11a8:	96 95       	lsr	r25
    11aa:	96 95       	lsr	r25
    11ac:	e9 0f       	add	r30, r25
    11ae:	ff 27       	eor	r31, r31
    11b0:	e6 52       	subi	r30, 0x26	; 38
    11b2:	ff 4f       	sbci	r31, 0xFF	; 255
    11b4:	99 27       	eor	r25, r25
    11b6:	33 27       	eor	r19, r19
    11b8:	ee 24       	eor	r14, r14
    11ba:	ff 24       	eor	r15, r15
    11bc:	a7 01       	movw	r20, r14
    11be:	e7 01       	movw	r28, r14
    11c0:	05 90       	lpm	r0, Z+
    11c2:	08 94       	sec
    11c4:	07 94       	ror	r0
    11c6:	28 f4       	brcc	.+10     	; 0x11d2 <__ftoa_engine+0x80>
    11c8:	36 0f       	add	r19, r22
    11ca:	e7 1e       	adc	r14, r23
    11cc:	f8 1e       	adc	r15, r24
    11ce:	49 1f       	adc	r20, r25
    11d0:	51 1d       	adc	r21, r1
    11d2:	66 0f       	add	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	88 1f       	adc	r24, r24
    11d8:	99 1f       	adc	r25, r25
    11da:	06 94       	lsr	r0
    11dc:	a1 f7       	brne	.-24     	; 0x11c6 <__ftoa_engine+0x74>
    11de:	05 90       	lpm	r0, Z+
    11e0:	07 94       	ror	r0
    11e2:	28 f4       	brcc	.+10     	; 0x11ee <__ftoa_engine+0x9c>
    11e4:	e7 0e       	add	r14, r23
    11e6:	f8 1e       	adc	r15, r24
    11e8:	49 1f       	adc	r20, r25
    11ea:	56 1f       	adc	r21, r22
    11ec:	c1 1d       	adc	r28, r1
    11ee:	77 0f       	add	r23, r23
    11f0:	88 1f       	adc	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	66 1f       	adc	r22, r22
    11f6:	06 94       	lsr	r0
    11f8:	a1 f7       	brne	.-24     	; 0x11e2 <__ftoa_engine+0x90>
    11fa:	05 90       	lpm	r0, Z+
    11fc:	07 94       	ror	r0
    11fe:	28 f4       	brcc	.+10     	; 0x120a <__ftoa_engine+0xb8>
    1200:	f8 0e       	add	r15, r24
    1202:	49 1f       	adc	r20, r25
    1204:	56 1f       	adc	r21, r22
    1206:	c7 1f       	adc	r28, r23
    1208:	d1 1d       	adc	r29, r1
    120a:	88 0f       	add	r24, r24
    120c:	99 1f       	adc	r25, r25
    120e:	66 1f       	adc	r22, r22
    1210:	77 1f       	adc	r23, r23
    1212:	06 94       	lsr	r0
    1214:	a1 f7       	brne	.-24     	; 0x11fe <__ftoa_engine+0xac>
    1216:	05 90       	lpm	r0, Z+
    1218:	07 94       	ror	r0
    121a:	20 f4       	brcc	.+8      	; 0x1224 <__ftoa_engine+0xd2>
    121c:	49 0f       	add	r20, r25
    121e:	56 1f       	adc	r21, r22
    1220:	c7 1f       	adc	r28, r23
    1222:	d8 1f       	adc	r29, r24
    1224:	99 0f       	add	r25, r25
    1226:	66 1f       	adc	r22, r22
    1228:	77 1f       	adc	r23, r23
    122a:	88 1f       	adc	r24, r24
    122c:	06 94       	lsr	r0
    122e:	a9 f7       	brne	.-22     	; 0x121a <__ftoa_engine+0xc8>
    1230:	84 91       	lpm	r24, Z
    1232:	10 95       	com	r17
    1234:	17 70       	andi	r17, 0x07	; 7
    1236:	41 f0       	breq	.+16     	; 0x1248 <__ftoa_engine+0xf6>
    1238:	d6 95       	lsr	r29
    123a:	c7 95       	ror	r28
    123c:	57 95       	ror	r21
    123e:	47 95       	ror	r20
    1240:	f7 94       	ror	r15
    1242:	e7 94       	ror	r14
    1244:	1a 95       	dec	r17
    1246:	c1 f7       	brne	.-16     	; 0x1238 <__ftoa_engine+0xe6>
    1248:	e0 e8       	ldi	r30, 0x80	; 128
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	68 94       	set
    124e:	15 90       	lpm	r1, Z+
    1250:	15 91       	lpm	r17, Z+
    1252:	35 91       	lpm	r19, Z+
    1254:	65 91       	lpm	r22, Z+
    1256:	95 91       	lpm	r25, Z+
    1258:	05 90       	lpm	r0, Z+
    125a:	7f e2       	ldi	r23, 0x2F	; 47
    125c:	73 95       	inc	r23
    125e:	e1 18       	sub	r14, r1
    1260:	f1 0a       	sbc	r15, r17
    1262:	43 0b       	sbc	r20, r19
    1264:	56 0b       	sbc	r21, r22
    1266:	c9 0b       	sbc	r28, r25
    1268:	d0 09       	sbc	r29, r0
    126a:	c0 f7       	brcc	.-16     	; 0x125c <__ftoa_engine+0x10a>
    126c:	e1 0c       	add	r14, r1
    126e:	f1 1e       	adc	r15, r17
    1270:	43 1f       	adc	r20, r19
    1272:	56 1f       	adc	r21, r22
    1274:	c9 1f       	adc	r28, r25
    1276:	d0 1d       	adc	r29, r0
    1278:	7e f4       	brtc	.+30     	; 0x1298 <__ftoa_engine+0x146>
    127a:	70 33       	cpi	r23, 0x30	; 48
    127c:	11 f4       	brne	.+4      	; 0x1282 <__ftoa_engine+0x130>
    127e:	8a 95       	dec	r24
    1280:	e6 cf       	rjmp	.-52     	; 0x124e <__ftoa_engine+0xfc>
    1282:	e8 94       	clt
    1284:	01 50       	subi	r16, 0x01	; 1
    1286:	30 f0       	brcs	.+12     	; 0x1294 <__ftoa_engine+0x142>
    1288:	08 0f       	add	r16, r24
    128a:	0a f4       	brpl	.+2      	; 0x128e <__ftoa_engine+0x13c>
    128c:	00 27       	eor	r16, r16
    128e:	02 17       	cp	r16, r18
    1290:	08 f4       	brcc	.+2      	; 0x1294 <__ftoa_engine+0x142>
    1292:	20 2f       	mov	r18, r16
    1294:	23 95       	inc	r18
    1296:	02 2f       	mov	r16, r18
    1298:	7a 33       	cpi	r23, 0x3A	; 58
    129a:	28 f0       	brcs	.+10     	; 0x12a6 <__ftoa_engine+0x154>
    129c:	79 e3       	ldi	r23, 0x39	; 57
    129e:	7d 93       	st	X+, r23
    12a0:	2a 95       	dec	r18
    12a2:	e9 f7       	brne	.-6      	; 0x129e <__ftoa_engine+0x14c>
    12a4:	10 c0       	rjmp	.+32     	; 0x12c6 <__ftoa_engine+0x174>
    12a6:	7d 93       	st	X+, r23
    12a8:	2a 95       	dec	r18
    12aa:	89 f6       	brne	.-94     	; 0x124e <__ftoa_engine+0xfc>
    12ac:	06 94       	lsr	r0
    12ae:	97 95       	ror	r25
    12b0:	67 95       	ror	r22
    12b2:	37 95       	ror	r19
    12b4:	17 95       	ror	r17
    12b6:	17 94       	ror	r1
    12b8:	e1 18       	sub	r14, r1
    12ba:	f1 0a       	sbc	r15, r17
    12bc:	43 0b       	sbc	r20, r19
    12be:	56 0b       	sbc	r21, r22
    12c0:	c9 0b       	sbc	r28, r25
    12c2:	d0 09       	sbc	r29, r0
    12c4:	98 f0       	brcs	.+38     	; 0x12ec <__ftoa_engine+0x19a>
    12c6:	23 95       	inc	r18
    12c8:	7e 91       	ld	r23, -X
    12ca:	73 95       	inc	r23
    12cc:	7a 33       	cpi	r23, 0x3A	; 58
    12ce:	08 f0       	brcs	.+2      	; 0x12d2 <__ftoa_engine+0x180>
    12d0:	70 e3       	ldi	r23, 0x30	; 48
    12d2:	7c 93       	st	X, r23
    12d4:	20 13       	cpse	r18, r16
    12d6:	b8 f7       	brcc	.-18     	; 0x12c6 <__ftoa_engine+0x174>
    12d8:	7e 91       	ld	r23, -X
    12da:	70 61       	ori	r23, 0x10	; 16
    12dc:	7d 93       	st	X+, r23
    12de:	30 f0       	brcs	.+12     	; 0x12ec <__ftoa_engine+0x19a>
    12e0:	83 95       	inc	r24
    12e2:	71 e3       	ldi	r23, 0x31	; 49
    12e4:	7d 93       	st	X+, r23
    12e6:	70 e3       	ldi	r23, 0x30	; 48
    12e8:	2a 95       	dec	r18
    12ea:	e1 f7       	brne	.-8      	; 0x12e4 <__ftoa_engine+0x192>
    12ec:	11 24       	eor	r1, r1
    12ee:	ef 90       	pop	r14
    12f0:	ff 90       	pop	r15
    12f2:	0f 91       	pop	r16
    12f4:	1f 91       	pop	r17
    12f6:	cf 91       	pop	r28
    12f8:	df 91       	pop	r29
    12fa:	99 27       	eor	r25, r25
    12fc:	87 fd       	sbrc	r24, 7
    12fe:	90 95       	com	r25
    1300:	08 95       	ret

00001302 <strnlen_P>:
    1302:	fc 01       	movw	r30, r24
    1304:	05 90       	lpm	r0, Z+
    1306:	61 50       	subi	r22, 0x01	; 1
    1308:	70 40       	sbci	r23, 0x00	; 0
    130a:	01 10       	cpse	r0, r1
    130c:	d8 f7       	brcc	.-10     	; 0x1304 <strnlen_P+0x2>
    130e:	80 95       	com	r24
    1310:	90 95       	com	r25
    1312:	8e 0f       	add	r24, r30
    1314:	9f 1f       	adc	r25, r31
    1316:	08 95       	ret

00001318 <strnlen>:
    1318:	fc 01       	movw	r30, r24
    131a:	61 50       	subi	r22, 0x01	; 1
    131c:	70 40       	sbci	r23, 0x00	; 0
    131e:	01 90       	ld	r0, Z+
    1320:	01 10       	cpse	r0, r1
    1322:	d8 f7       	brcc	.-10     	; 0x131a <strnlen+0x2>
    1324:	80 95       	com	r24
    1326:	90 95       	com	r25
    1328:	8e 0f       	add	r24, r30
    132a:	9f 1f       	adc	r25, r31
    132c:	08 95       	ret

0000132e <fputc>:
    132e:	0f 93       	push	r16
    1330:	1f 93       	push	r17
    1332:	cf 93       	push	r28
    1334:	df 93       	push	r29
    1336:	fb 01       	movw	r30, r22
    1338:	23 81       	ldd	r18, Z+3	; 0x03
    133a:	21 fd       	sbrc	r18, 1
    133c:	03 c0       	rjmp	.+6      	; 0x1344 <fputc+0x16>
    133e:	8f ef       	ldi	r24, 0xFF	; 255
    1340:	9f ef       	ldi	r25, 0xFF	; 255
    1342:	2c c0       	rjmp	.+88     	; 0x139c <fputc+0x6e>
    1344:	22 ff       	sbrs	r18, 2
    1346:	16 c0       	rjmp	.+44     	; 0x1374 <fputc+0x46>
    1348:	46 81       	ldd	r20, Z+6	; 0x06
    134a:	57 81       	ldd	r21, Z+7	; 0x07
    134c:	24 81       	ldd	r18, Z+4	; 0x04
    134e:	35 81       	ldd	r19, Z+5	; 0x05
    1350:	42 17       	cp	r20, r18
    1352:	53 07       	cpc	r21, r19
    1354:	44 f4       	brge	.+16     	; 0x1366 <fputc+0x38>
    1356:	a0 81       	ld	r26, Z
    1358:	b1 81       	ldd	r27, Z+1	; 0x01
    135a:	9d 01       	movw	r18, r26
    135c:	2f 5f       	subi	r18, 0xFF	; 255
    135e:	3f 4f       	sbci	r19, 0xFF	; 255
    1360:	31 83       	std	Z+1, r19	; 0x01
    1362:	20 83       	st	Z, r18
    1364:	8c 93       	st	X, r24
    1366:	26 81       	ldd	r18, Z+6	; 0x06
    1368:	37 81       	ldd	r19, Z+7	; 0x07
    136a:	2f 5f       	subi	r18, 0xFF	; 255
    136c:	3f 4f       	sbci	r19, 0xFF	; 255
    136e:	37 83       	std	Z+7, r19	; 0x07
    1370:	26 83       	std	Z+6, r18	; 0x06
    1372:	14 c0       	rjmp	.+40     	; 0x139c <fputc+0x6e>
    1374:	8b 01       	movw	r16, r22
    1376:	ec 01       	movw	r28, r24
    1378:	fb 01       	movw	r30, r22
    137a:	00 84       	ldd	r0, Z+8	; 0x08
    137c:	f1 85       	ldd	r31, Z+9	; 0x09
    137e:	e0 2d       	mov	r30, r0
    1380:	09 95       	icall
    1382:	89 2b       	or	r24, r25
    1384:	e1 f6       	brne	.-72     	; 0x133e <fputc+0x10>
    1386:	d8 01       	movw	r26, r16
    1388:	16 96       	adiw	r26, 0x06	; 6
    138a:	8d 91       	ld	r24, X+
    138c:	9c 91       	ld	r25, X
    138e:	17 97       	sbiw	r26, 0x07	; 7
    1390:	01 96       	adiw	r24, 0x01	; 1
    1392:	17 96       	adiw	r26, 0x07	; 7
    1394:	9c 93       	st	X, r25
    1396:	8e 93       	st	-X, r24
    1398:	16 97       	sbiw	r26, 0x06	; 6
    139a:	ce 01       	movw	r24, r28
    139c:	df 91       	pop	r29
    139e:	cf 91       	pop	r28
    13a0:	1f 91       	pop	r17
    13a2:	0f 91       	pop	r16
    13a4:	08 95       	ret

000013a6 <vprintf>:
    13a6:	ab 01       	movw	r20, r22
    13a8:	bc 01       	movw	r22, r24
    13aa:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__iob+0x2>
    13ae:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__iob+0x3>
    13b2:	0e 94 cd 04 	call	0x99a	; 0x99a <vfprintf>
    13b6:	08 95       	ret

000013b8 <__ultoa_invert>:
    13b8:	fa 01       	movw	r30, r20
    13ba:	aa 27       	eor	r26, r26
    13bc:	28 30       	cpi	r18, 0x08	; 8
    13be:	51 f1       	breq	.+84     	; 0x1414 <__ultoa_invert+0x5c>
    13c0:	20 31       	cpi	r18, 0x10	; 16
    13c2:	81 f1       	breq	.+96     	; 0x1424 <__ultoa_invert+0x6c>
    13c4:	e8 94       	clt
    13c6:	6f 93       	push	r22
    13c8:	6e 7f       	andi	r22, 0xFE	; 254
    13ca:	6e 5f       	subi	r22, 0xFE	; 254
    13cc:	7f 4f       	sbci	r23, 0xFF	; 255
    13ce:	8f 4f       	sbci	r24, 0xFF	; 255
    13d0:	9f 4f       	sbci	r25, 0xFF	; 255
    13d2:	af 4f       	sbci	r26, 0xFF	; 255
    13d4:	b1 e0       	ldi	r27, 0x01	; 1
    13d6:	3e d0       	rcall	.+124    	; 0x1454 <__ultoa_invert+0x9c>
    13d8:	b4 e0       	ldi	r27, 0x04	; 4
    13da:	3c d0       	rcall	.+120    	; 0x1454 <__ultoa_invert+0x9c>
    13dc:	67 0f       	add	r22, r23
    13de:	78 1f       	adc	r23, r24
    13e0:	89 1f       	adc	r24, r25
    13e2:	9a 1f       	adc	r25, r26
    13e4:	a1 1d       	adc	r26, r1
    13e6:	68 0f       	add	r22, r24
    13e8:	79 1f       	adc	r23, r25
    13ea:	8a 1f       	adc	r24, r26
    13ec:	91 1d       	adc	r25, r1
    13ee:	a1 1d       	adc	r26, r1
    13f0:	6a 0f       	add	r22, r26
    13f2:	71 1d       	adc	r23, r1
    13f4:	81 1d       	adc	r24, r1
    13f6:	91 1d       	adc	r25, r1
    13f8:	a1 1d       	adc	r26, r1
    13fa:	20 d0       	rcall	.+64     	; 0x143c <__ultoa_invert+0x84>
    13fc:	09 f4       	brne	.+2      	; 0x1400 <__ultoa_invert+0x48>
    13fe:	68 94       	set
    1400:	3f 91       	pop	r19
    1402:	2a e0       	ldi	r18, 0x0A	; 10
    1404:	26 9f       	mul	r18, r22
    1406:	11 24       	eor	r1, r1
    1408:	30 19       	sub	r19, r0
    140a:	30 5d       	subi	r19, 0xD0	; 208
    140c:	31 93       	st	Z+, r19
    140e:	de f6       	brtc	.-74     	; 0x13c6 <__ultoa_invert+0xe>
    1410:	cf 01       	movw	r24, r30
    1412:	08 95       	ret
    1414:	46 2f       	mov	r20, r22
    1416:	47 70       	andi	r20, 0x07	; 7
    1418:	40 5d       	subi	r20, 0xD0	; 208
    141a:	41 93       	st	Z+, r20
    141c:	b3 e0       	ldi	r27, 0x03	; 3
    141e:	0f d0       	rcall	.+30     	; 0x143e <__ultoa_invert+0x86>
    1420:	c9 f7       	brne	.-14     	; 0x1414 <__ultoa_invert+0x5c>
    1422:	f6 cf       	rjmp	.-20     	; 0x1410 <__ultoa_invert+0x58>
    1424:	46 2f       	mov	r20, r22
    1426:	4f 70       	andi	r20, 0x0F	; 15
    1428:	40 5d       	subi	r20, 0xD0	; 208
    142a:	4a 33       	cpi	r20, 0x3A	; 58
    142c:	18 f0       	brcs	.+6      	; 0x1434 <__ultoa_invert+0x7c>
    142e:	49 5d       	subi	r20, 0xD9	; 217
    1430:	31 fd       	sbrc	r19, 1
    1432:	40 52       	subi	r20, 0x20	; 32
    1434:	41 93       	st	Z+, r20
    1436:	02 d0       	rcall	.+4      	; 0x143c <__ultoa_invert+0x84>
    1438:	a9 f7       	brne	.-22     	; 0x1424 <__ultoa_invert+0x6c>
    143a:	ea cf       	rjmp	.-44     	; 0x1410 <__ultoa_invert+0x58>
    143c:	b4 e0       	ldi	r27, 0x04	; 4
    143e:	a6 95       	lsr	r26
    1440:	97 95       	ror	r25
    1442:	87 95       	ror	r24
    1444:	77 95       	ror	r23
    1446:	67 95       	ror	r22
    1448:	ba 95       	dec	r27
    144a:	c9 f7       	brne	.-14     	; 0x143e <__ultoa_invert+0x86>
    144c:	00 97       	sbiw	r24, 0x00	; 0
    144e:	61 05       	cpc	r22, r1
    1450:	71 05       	cpc	r23, r1
    1452:	08 95       	ret
    1454:	9b 01       	movw	r18, r22
    1456:	ac 01       	movw	r20, r24
    1458:	0a 2e       	mov	r0, r26
    145a:	06 94       	lsr	r0
    145c:	57 95       	ror	r21
    145e:	47 95       	ror	r20
    1460:	37 95       	ror	r19
    1462:	27 95       	ror	r18
    1464:	ba 95       	dec	r27
    1466:	c9 f7       	brne	.-14     	; 0x145a <__ultoa_invert+0xa2>
    1468:	62 0f       	add	r22, r18
    146a:	73 1f       	adc	r23, r19
    146c:	84 1f       	adc	r24, r20
    146e:	95 1f       	adc	r25, r21
    1470:	a0 1d       	adc	r26, r0
    1472:	08 95       	ret

00001474 <_exit>:
    1474:	f8 94       	cli

00001476 <__stop_program>:
    1476:	ff cf       	rjmp	.-2      	; 0x1476 <__stop_program>
